{"version":3,"file":"index.js","sources":["../src/react/Context.tsx","../src/react/Annotations.tsx","../src/react/Axes.tsx","../src/react/Data.tsx","../src/react/GridLines.tsx","../src/react/Scrubber.tsx","../src/react/Graph.tsx","../src/react/Canvas.tsx"],"sourcesContent":["import { GraphData } from \"@thingco/graphviz\";\nimport React from \"react\";\n\n/**\n * NOTE the context is defined apart from the Provider to prevent circular dependencies\n * occuring when main `Graph.tsx` file was broken down into separate discrete files.\n */\nexport const GraphContext = React.createContext<GraphData | null>(null);\n\nexport function useGraph(): GraphData {\n\tconst graph = React.useContext(GraphContext);\n\n\tif (!GraphContext) {\n\t\tthrow new Error(\n\t\t\t\"Graph values can only be accessed from within a graph context provider.\"\n\t\t);\n\t} else if (!graph) {\n\t\tthrow new Error(\n\t\t\t\"Graph provider value is null: cannot access anything from it, please configure it correctly.\"\n\t\t);\n\t}\n\n\treturn graph;\n}\n","import {\n  steppedXAxisValues,\n  steppedYAxisValues,\n  VerticalAlignment,\n  xAxisAnnotations,\n  yAxisAnnotations\n} from \"@thingco/graphviz\";\nimport React from \"react\";\n\nimport { useGraph } from \"./Context\";\n\nexport interface AxisAnnotationsProps {\n\tstyle?: React.CSSProperties;\n\toffsetY?: number;\n\toffsetX?: number;\n\tannotations?: (string | number)[];\n}\n\nconst defaultAnnotationStyle: React.CSSProperties = {\n\tfontSize: 3,\n\tfontFamily: \"sans-serif\",\n\tfontWeight: \"bold\",\n\ttextAnchor: \"middle\",\n};\n\nexport const XAxisAnnotations = ({\n\tstyle = {},\n\tannotations,\n\toffsetY = 4,\n\tposition = \"bottom\",\n}: AxisAnnotationsProps & { position?: VerticalAlignment }): JSX.Element => {\n\tstyle = { ...defaultAnnotationStyle, ...style };\n\tconst graph = useGraph();\n\n\tannotations = annotations ?? steppedXAxisValues(graph);\n\n\treturn (\n\t\t<g style={style} data-componentid=\"x-axis-annotations\">\n\t\t\t{xAxisAnnotations(graph, position).map(({ x, y }, i) => (\n\t\t\t\t<text\n\t\t\t\t\tkey={`${x}${y}${i}`}\n\t\t\t\t\tx={x}\n\t\t\t\t\ty={y - offsetY}\n\t\t\t\t\tdata-componentid={`x-axis-annotation-${x}${y}${i}`}\n\t\t\t\t>\n\t\t\t\t\t{annotations && annotations[i]}\n\t\t\t\t</text>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n\nexport const YAxisAnnotations = ({\n\tstyle = {},\n\toffsetX = 2,\n\toffsetY = 0,\n\tannotations,\n}: AxisAnnotationsProps): JSX.Element => {\n\tstyle = { ...defaultAnnotationStyle, ...style };\n\tconst graph = useGraph();\n\n\tannotations = annotations ?? steppedYAxisValues(graph);\n\n\treturn (\n\t\t<g data-componentid=\"y-axis-annotations\">\n\t\t\t{yAxisAnnotations(graph).map(({ x, y }, i) => (\n\t\t\t\t<text\n\t\t\t\t\tkey={`${x}${y}${i}`}\n\t\t\t\t\tx={x + offsetX}\n\t\t\t\t\ty={y}\n\t\t\t\t\tdy={offsetY}\n\t\t\t\t\tstyle={{ ...style, textAnchor: \"end\" }}\n\t\t\t\t\tdata-componentid={`y-axis-annotation-${x}${y}${i}`}\n\t\t\t\t>\n\t\t\t\t\t{annotations && annotations[i]}\n\t\t\t\t</text>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n","import { VerticalAlignment, xAxis, xAxisSteps, yAxis, yAxisSteps } from \"@thingco/graphviz\";\nimport React from \"react\";\n\nimport { useGraph } from \"./Context\";\n\nexport interface AxisProps {\n\tstyle?: React.CSSProperties;\n\tshowSteps?: boolean;\n}\n\nconst defaultAxisStyle: React.CSSProperties = {\n\tfill: \"none\",\n\tstroke: \"black\",\n\tstrokeLinecap: \"round\",\n\tstrokeWidth: 1,\n};\n\nexport const XAxis = ({\n\tstyle = defaultAxisStyle,\n\tshowSteps = true,\n\tposition = \"bottom\",\n}: AxisProps & { position?: VerticalAlignment }): JSX.Element => {\n\tconst graph = useGraph();\n\tconst { x1, x2, y1, y2 } = xAxis(graph, position);\n\tconst axisSteps = showSteps ? xAxisSteps(graph, position) : null;\n\n\treturn (\n\t\t<g data-componentid=\"x-axis\">\n\t\t\t<line style={style} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t\t\t{axisSteps?.map(({ x1, x2, y1, y2 }, i) => (\n\t\t\t\t<line\n\t\t\t\t\tkey={`${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty1={y1}\n\t\t\t\t\ty2={y2}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n\nexport const YAxis = ({\n\tstyle = defaultAxisStyle,\n\tshowSteps = true,\n}: AxisProps): JSX.Element => {\n\tconst graph = useGraph();\n\tconst { x1, x2, y1, y2 } = yAxis(graph);\n\tconst axisSteps = showSteps ? yAxisSteps(graph) : null;\n\n\treturn (\n\t\t<g data-componentid=\"y-axis\">\n\t\t\t<line style={style} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t\t\t{axisSteps?.map(({ x1, x2, y1, y2 }, i) => (\n\t\t\t\t<line\n\t\t\t\t\tkey={`${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty1={y1}\n\t\t\t\t\ty2={y2}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n","import { dotPoints, horizontalLineBarPoints, linePoints, px, py, verticalLineBarPoints } from \"@thingco/graphviz\";\nimport React from \"react\";\n\nimport { useGraph } from \"./Context\";\n\nexport interface DataProps {\n\tstyle?: React.CSSProperties;\n\tcoordinateOverride?: number[];\n}\n\nconst defaultDataLineStyle: React.CSSProperties = {\n\tfill: \"none\",\n\tstroke: \"black\",\n\tstrokeLinecap: \"round\",\n\tstrokeWidth: 1,\n};\n\nexport const DataLine = ({ style = {} }: DataProps): JSX.Element => {\n\tstyle = { ...defaultDataLineStyle, ...style };\n\tconst graph = useGraph();\n\n\treturn <polyline style={style} points={linePoints(graph)} />;\n};\n\nexport const VerticalLineBars = ({ style = {} }: DataProps): JSX.Element => {\n\tstyle = { ...defaultDataLineStyle, ...style };\n\tconst graph = useGraph();\n\tconst lines = verticalLineBarPoints(graph).map(({ x1, x2, y1, y2 }, i) => (\n\t\t<line key={`${x1}${x2}${y1}${y2}${i}`} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t));\n\n\treturn <g style={style}>{lines}</g>;\n};\n\nexport const HorizontalLineBars = ({ style = {} }: DataProps): JSX.Element => {\n\tstyle = { ...defaultDataLineStyle, ...style };\n\tconst graph = useGraph();\n\tconst lines = horizontalLineBarPoints(graph).map(({ x1, x2, y1, y2 }, i) => (\n\t\t<line key={`${x1}${x2}${y1}${y2}${i}`} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t));\n\n\treturn <g style={style}>{lines}</g>;\n};\n\nconst defaultDataDotsStyle: React.CSSProperties = {\n\tfill: \"black\",\n\tstroke: \"white\",\n\tstrokeWidth: 1,\n};\n\nexport const DataDots = ({\n\tstyle = {},\n\tr = 2,\n}: DataProps & { r?: number }): JSX.Element => {\n\tstyle = { ...defaultDataDotsStyle, ...style };\n\tconst graph = useGraph();\n\tconst dots = dotPoints(graph).map(({ x, y }, i) => (\n\t\t<circle key={`${x}${y}${i}`} cx={x} cy={y} r={r} />\n\t));\n\treturn <g style={style}>{dots}</g>;\n};\n\nconst defaultAreaStyle: React.CSSProperties = {\n\tstroke: \"none\",\n\tfill: \"grey\",\n\topacity: 0.2,\n};\n\nexport const AreaFillXAxis = ({\n\tstyle = {},\n\tcoordinateOverride,\n}: DataProps): JSX.Element => {\n\tstyle = { ...defaultAreaStyle, ...style };\n\tlet graph = useGraph();\n\t// If using as an overlay, there will be a new set of y-axis coordinates to plot:\n\tif (coordinateOverride) {\n\t\tgraph = { ...graph, yAxisValues: coordinateOverride };\n\t}\n\n\tconst points = `${px(graph, 0)},${py(graph, 0)} ${linePoints(graph)} ${px(\n\t\tgraph,\n\t\tgraph.xAxisMax\n\t)},${py(graph, 0)}`;\n\n\treturn <polygon style={style} points={points} />;\n};\n\nexport const AreaFillYAxis = ({\n\tstyle = {},\n\tcoordinateOverride,\n}: DataProps): JSX.Element => {\n\tstyle = { ...defaultAreaStyle, ...style };\n\tlet graph = useGraph();\n\t// If using as an overlay, there will be a new set of y-axis coordinates to plot:\n\tif (coordinateOverride) {\n\t\tgraph = { ...graph, xAxisValues: coordinateOverride };\n\t}\n\n\tconst points = `${px(graph, 0)},${py(graph, 0)} ${linePoints(graph)} ${px(\n\t\tgraph,\n\t\t0\n\t)},${py(graph, graph.yAxisMax)}`;\n\n\treturn <polygon style={style} points={points} />;\n};\n","import { horizontalGridLines, verticalGridlines } from \"@thingco/graphviz\";\nimport React from \"react\";\n\nimport { useGraph } from \"./Context\";\n\nexport interface GridLinesProps {\n\tstyle?: React.CSSProperties;\n}\n\nconst defaultGridLinesStyle: React.CSSProperties = {\n\tstroke: \"grey\",\n\tvectorEffect: \"non-scaling-stroke\",\n\topacity: \"0.5\",\n};\n\nexport const XAxisGridLines = ({ style = {} }: GridLinesProps): JSX.Element => {\n\tstyle = { ...defaultGridLinesStyle, ...style };\n\tconst graph = useGraph();\n\n\treturn (\n\t\t<g data-componentid=\"x-axis-gridlines\">\n\t\t\t{verticalGridlines(graph).map(({ x1, x2, y1, y2 }, i) => (\n\t\t\t\t<line\n\t\t\t\t\tkey={`${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty1={y1}\n\t\t\t\t\ty2={y2}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tdata-componentid={`x-axis-gridline-${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n\nexport const YAxisGridLines = ({ style = {} }: GridLinesProps): JSX.Element => {\n\tstyle = { ...defaultGridLinesStyle, ...style };\n\tconst graph = useGraph();\n\n\treturn (\n\t\t<g data-componentid=\"y-axis-gridlines\">\n\t\t\t{horizontalGridLines(graph).map(({ x1, x2, y1, y2 }, i) => (\n\t\t\t\t<line\n\t\t\t\t\tkey={`${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty1={y1}\n\t\t\t\t\ty2={y2}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tdata-componentid={`y-axis-gridline-${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n","import {\n  HorizontalAlignment,\n  horizontalLineFullWidth,\n  px,\n  py,\n  VerticalAlignment,\n  verticalLineFullHeight\n} from \"@thingco/graphviz\";\nimport React from \"react\";\n\nimport { useGraph } from \"./Context\";\n\nexport interface ScrubberControlProps {\n\tcurrentDataPointIndex: number;\n\tsetCurrentDataPointIndex: (n: number) => void;\n\tthumbStyle?: React.CSSProperties;\n}\n\nconst underlyingRangeInputStyle: React.CSSProperties = {\n\tappearance: \"none\",\n\tbackground: \"transparent\",\n\topacity: 0,\n\tdisplay: \"block\",\n\twidth: \"100%\",\n\theight: \"100%\",\n};\n\nconst underlyingVerticalRangeInputStyle: React.CSSProperties = {\n\t...underlyingRangeInputStyle,\n\tWebkitAppearance: \"slider-vertical\",\n\t// transform: \"rotate(180deg)\",\n};\n\nconst defaultRangeStyle: React.CSSProperties = {\n\tfill: \"none\",\n\tstroke: \"black\",\n\tstrokeWidth: 2,\n};\n\nexport const ScrubberHorizontal = ({\n\tthumbStyle = {},\n\tcurrentDataPointIndex,\n\tsetCurrentDataPointIndex,\n\tstartPosition = \"zero\",\n}: ScrubberControlProps & {\n\tstartPosition: HorizontalAlignment;\n}): JSX.Element => {\n\tthumbStyle = { ...defaultRangeStyle, ...thumbStyle };\n\n\tconst graph = useGraph();\n\n\tlet thumbPos: number;\n\tswitch (startPosition) {\n\t\tcase \"left\":\n\t\t\tthumbPos = graph.xAxisMin;\n\t\t\tbreak;\n\t\tcase \"zero\":\n\t\t\tthumbPos = 0;\n\t\t\tbreak;\n\t\tcase \"right\":\n\t\t\tthumbPos = graph.xAxisMax;\n\t\t\tbreak;\n\t}\n\n\tconst { x1, x2, y1, y2 } = verticalLineFullHeight(graph, thumbPos);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<g\n\t\t\t\ttransform={`translate(${px(\n\t\t\t\t\tgraph,\n\t\t\t\t\tgraph.xAxisValues[currentDataPointIndex]\n\t\t\t\t)})`}\n\t\t\t>\n\t\t\t\t<line style={thumbStyle} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t\t\t</g>\n\t\t\t<foreignObject\n\t\t\t\tx={0}\n\t\t\t\ty={0}\n\t\t\t\twidth={graph.xAxisSize}\n\t\t\t\theight={graph.yAxisSize}\n\t\t\t\tdata-componentid=\"scrubbercontrol\"\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tonChange={(e) => setCurrentDataPointIndex(+e.target.value)}\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={graph.xAxisValues.length - 1}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tstyle={underlyingRangeInputStyle}\n\t\t\t\t\tvalue={currentDataPointIndex}\n\t\t\t\t/>\n\t\t\t</foreignObject>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const ScrubberVertical = ({\n\tthumbStyle = {},\n\tcurrentDataPointIndex,\n\tsetCurrentDataPointIndex,\n\tstartPosition = \"zero\",\n}: ScrubberControlProps & {\n\tstartPosition: VerticalAlignment;\n}): JSX.Element => {\n\tthumbStyle = { ...defaultRangeStyle, ...thumbStyle };\n\tconst graph = useGraph();\n\n\tlet thumbPos: number;\n\tswitch (startPosition) {\n\t\tcase \"top\":\n\t\t\tthumbPos = graph.yAxisMax;\n\t\t\tbreak;\n\t\tcase \"zero\":\n\t\t\tthumbPos = 0;\n\t\t\tbreak;\n\t\tcase \"bottom\":\n\t\t\tthumbPos = graph.xAxisMin;\n\t\t\tbreak;\n\t}\n\n\tconst { x1, x2, y1, y2 } = horizontalLineFullWidth(graph, thumbPos);\n\n\t/** NOTE TS typings for input elements do not include the `orient` property */\n\tconst inputRef = React.useRef<HTMLInputElement>(null);\n\n\tReact.useEffect(() => {\n\t\tif (inputRef != null && inputRef.current != null) {\n\t\t\tinputRef.current.setAttribute(\"orient\", \"vertical\");\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<g\n\t\t\t\ttransform={`translate(0 ${py(\n\t\t\t\t\tgraph,\n\t\t\t\t\tgraph.yAxisValues[currentDataPointIndex]\n\t\t\t\t)})`}\n\t\t\t>\n\t\t\t\t<line style={thumbStyle} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t\t\t</g>\n\t\t\t<foreignObject\n\t\t\t\tx={0}\n\t\t\t\ty={0}\n\t\t\t\twidth={graph.xAxisSize}\n\t\t\t\theight={graph.yAxisSize}\n\t\t\t\tdata-componentid=\"scrubbercontrol\"\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tonChange={(e) => setCurrentDataPointIndex(+e.target.value)}\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={graph.yAxisValues.length - 1}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tstyle={underlyingVerticalRangeInputStyle}\n\t\t\t\t\tvalue={currentDataPointIndex}\n\t\t\t\t/>\n\t\t\t</foreignObject>\n\t\t</React.Fragment>\n\t);\n};\n","import { createGraph, GraphConstructor } from \"@thingco/graphviz\";\nimport React from \"react\";\n\nimport { XAxisAnnotations, YAxisAnnotations } from \"./Annotations\";\nimport { XAxis, YAxis } from \"./Axes\";\nimport { Canvas } from \"./Canvas\";\nimport { GraphContext } from \"./Context\";\nimport { AreaFillXAxis, AreaFillYAxis, DataDots, DataLine, HorizontalLineBars, VerticalLineBars } from \"./Data\";\nimport { XAxisGridLines, YAxisGridLines } from \"./GridLines\";\nimport { ScrubberHorizontal, ScrubberVertical } from \"./Scrubber\";\n\nexport type GraphProps = GraphConstructor & {\n\tchildren: React.ReactNode;\n};\n\nexport const Graph = ({\n\tchildren,\n\txAxisSize,\n\txAxisScale,\n\txAxisMax,\n\txAxisMin,\n\txAxisStep,\n\txAxisValues,\n\tyAxisSize,\n\tyAxisScale,\n\tyAxisMax,\n\tyAxisMin,\n\tyAxisStep,\n\tyAxisValues,\n}: GraphProps): JSX.Element => {\n\tconst graph = createGraph({\n\t\txAxisSize,\n\t\txAxisScale,\n\t\txAxisMax,\n\t\txAxisMin,\n\t\txAxisStep,\n\t\txAxisValues,\n\t\tyAxisSize,\n\t\tyAxisScale,\n\t\tyAxisMax,\n\t\tyAxisMin,\n\t\tyAxisStep,\n\t\tyAxisValues,\n\t});\n\n\treturn (\n\t\t<GraphContext.Provider value={graph}>{children}</GraphContext.Provider>\n\t);\n};\n\nGraph.Canvas = Canvas;\nGraph.XAxisAnnotations = XAxisAnnotations;\nGraph.YAxisAnnotations = YAxisAnnotations;\nGraph.DataLine = DataLine;\nGraph.DataDots = DataDots;\nGraph.VerticalLineBars = VerticalLineBars;\nGraph.HorizontalLineBars = HorizontalLineBars;\nGraph.AreaFillXAxis = AreaFillXAxis;\nGraph.AreaFillYAxis = AreaFillYAxis;\nGraph.XAxis = XAxis;\nGraph.XAxisGridLines = XAxisGridLines;\nGraph.YAxis = YAxis;\nGraph.YAxisGridLines = YAxisGridLines;\nGraph.ScrubberHorizontal = ScrubberHorizontal;\nGraph.ScrubberVertical = ScrubberVertical;\n\nexport { useGraph } from \"./Context\";\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\n\nexport type GraphPadding =\n  | number\n  | { top: number; right: number; bottom: number; left: number };\n\nexport interface CanvasProps {\n  children: React.ReactNode;\n  padding?: GraphPadding;\n  preserveAspectRatio?: string;\n  style?: React.CSSProperties;\n}\n\nexport const Canvas = ({\n  children,\n  padding = 10,\n  preserveAspectRatio = \"xMidYMid\",\n  style = {},\n}: CanvasProps): JSX.Element => {\n  const graph = useGraph();\n\n  const viewBoxMinX =\n    0 - (typeof padding === \"number\" ? padding : padding.left);\n  const viewBoxMinY = 0 - (typeof padding === \"number\" ? padding : padding.top);\n  const viewBoxWidth =\n    graph.xAxisSize +\n    (typeof padding === \"number\" ? padding * 2 : padding.right + padding.left);\n  const viewBoxHeight =\n    graph.yAxisSize +\n    (typeof padding === \"number\" ? padding * 2 : padding.top + padding.bottom);\n  console.log(\n    \"padding: \",\n    JSON.stringify(padding),\n    \"vbHeight: \",\n    viewBoxHeight\n  );\n  return (\n    <svg\n      style={style}\n      viewBox={`${viewBoxMinX} ${viewBoxMinY} ${viewBoxWidth} ${viewBoxHeight}`}\n      preserveAspectRatio={preserveAspectRatio}\n    >\n      {children}\n    </svg>\n  );\n};\n"],"names":["GraphContext","React","createContext","useGraph","graph","useContext","Error","defaultAnnotationStyle","fontSize","fontFamily","fontWeight","textAnchor","defaultAxisStyle","fill","stroke","strokeLinecap","strokeWidth","defaultDataLineStyle","defaultDataDotsStyle","defaultAreaStyle","opacity","defaultGridLinesStyle","vectorEffect","underlyingRangeInputStyle","appearance","background","display","width","height","underlyingVerticalRangeInputStyle","WebkitAppearance","defaultRangeStyle","Graph","children","createGraph","xAxisSize","xAxisScale","xAxisMax","xAxisMin","xAxisStep","xAxisValues","yAxisSize","yAxisScale","yAxisMax","yAxisMin","yAxisStep","yAxisValues","Provider","value","Canvas","padding","preserveAspectRatio","style","viewBoxMinX","left","viewBoxMinY","top","viewBoxWidth","right","viewBoxHeight","bottom","console","log","JSON","stringify","viewBox","XAxisAnnotations","annotations","offsetY","position","steppedXAxisValues","data-componentid","xAxisAnnotations","map","i","x","y","key","YAxisAnnotations","offsetX","steppedYAxisValues","yAxisAnnotations","dy","DataLine","points","linePoints","DataDots","r","dots","dotPoints","cx","cy","VerticalLineBars","lines","verticalLineBarPoints","x1","x2","y1","y2","HorizontalLineBars","horizontalLineBarPoints","AreaFillXAxis","coordinateOverride","px","py","AreaFillYAxis","XAxis","showSteps","xAxis","axisSteps","xAxisSteps","h","XAxisGridLines","verticalGridlines","YAxis","yAxis","yAxisSteps","YAxisGridLines","horizontalGridLines","ScrubberHorizontal","thumbStyle","currentDataPointIndex","setCurrentDataPointIndex","startPosition","thumbPos","verticalLineFullHeight","Fragment","transform","onChange","e","target","type","min","max","length","step","ScrubberVertical","horizontalLineFullWidth","inputRef","useRef","useEffect","current","setAttribute","ref"],"mappings":"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"}