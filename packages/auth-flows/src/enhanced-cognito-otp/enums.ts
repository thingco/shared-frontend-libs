export const enum AuthState {
	// Session check top-level state:
	CheckingSession = "CheckingSession",
	// Username input top-level state:
	UsernameInput = "UsernameInput",
	// Username input substates:
	AwaitingUsernameInput = "AwaitingUsernameInput",
	ValidatingUsernameInput = "ValidatingUsernameInput",
	InvalidUsername = "InvalidUsername",
	PasswordRetriesExceeded = "PasswordRetriesExceeded",
	// OTP input top-level state:
	OTPInput = "OTPInput",
	// OTP input substates:
	AwaitingOtpInput = "AwaitingOtpInput",
	ValidatingOtpInput = "ValidatingOtpInput",
	InvalidOtp = "InvalidOtp",
	// Username/Password top-level state:
	UsernamePasswordInput = "UsernamePasswordInput",
	// Username/Password substates:
	AwaitingUsernamePasswordInput = "AwaitingUsernamePasswordInput",
	ValidatingUsernamePasswordInput = "ValidatingUsernamePasswordInput",
	InvalidUsernamePasswordInput = "InvalidUsernamePasswordInput",
	// PIN input top-level state:
	PINInput = "PINInput",
	// PIN input substates:
	PINRevocationInit = "PINRevocationInit",
	PINInputInit = "PINInputInit",
	AwaitingPINInput = "AwaitingPINInput",
	AwaitingNewPINInput = "AwaitingNewPINInput",
	AwaitingNewPINConfirmationInput = "AwaitingNewPINConfirmationInput",
	SettingNewPIN = "SettingNewPIN",
	ValidatingPINInput = "ValidatingPINInput",
	InvalidPIN = "InvalidPIN",
	// Authorised top-level state:
	Authorised = "Authorised",
	// Logging out top-level state:
	LoggingOut = "LoggingOut",
}

/**
 * IDs are autogenerated by XState, but it is useful to
 *
 * a. have one for the root node (this is recommended), and
 * b. add an ID to state nodes that need to be specifically targeted. This is _extremely_
 *    useful, particularly with heirarchical/nested state machines, as it allows you to
 * 	  use `target: "#MyId"` (note the `#` prefix) to jump directly to a specific state node.
 */
export const enum AuthStateId {
	Authenticator = "Authenticator",
	CheckingSession = "CheckingSession",
	UsernameInput = "UsernameInput",
	UsernamePasswordInput = "UsernamePasswordInput",
	OTPInput = "OTPInput",
	PINInput = "PINInput",
	PINRevocation = "PINRevocation",
	Authorised = "Authorised",
	PasswordRetriesExceeded = "PasswordRetriesExceeded",
}

export const enum AuthEventType {
	LOG_OUT = "LOG_OUT",
	SUBMIT_USERNAME = "SUBMIT_USERNAME",
	SUBMIT_OTP = "SUBMIT_OTP",
	SUBMIT_USERNAME_AND_PASSWORD = "SUBMIT_USERNAME_AND_PASSWORD",
	SKIP_PIN = "SKIP_PIN",
	SUBMIT_PIN = "SUBMIT_PIN",
	SUBMIT_PIN_CONFIRMATION = "SUBMIT_PIN_CONFIRMATION",
	REVOKE_PIN = "REVOKE_PIN",
	GO_BACK = "GO_BACK",
}

export const enum AuthAction {
	NetworkReqStarted = "NetworkReqStarted",
	NetworkReqComplete = "NetworkReqComplete",
	UserDetailsReceived = "UserDetailsReceived",
	SetPassword = "SetPassword",
	ClearPassword = "ClearPassword",
	SetUser = "SetUser",
	ClearUser = "ClearUser",
	SetUsername = "SetUsername",
	ClearUsername = "ClearUsername",
	SetUsernamePassword = "SetUsernamePassword",
	ClearUsernamePassword = "ClearUsernamePassword",
	SetPIN = "SetPIN",
	ClearPIN = "ClearPIN",
	ActivatePINSecurity = "SetPINSecurityActive",
	DeactivatePINSecurity = "DeactivatePINSecurity",
	DecrementRetries = "DecrementRetries",
	ResetRetries = "ResetRetries",
}

export const enum AuthCond {
	IsUsingOTPAuth = "IsUsingOTPAuth",
	IsUsingPINSecurity = "IsUsingPINSecurity",
	HasRetriesRemaining = "HasRetriesRemaining",
	NewPINMatches = "NewPinMatches",
}

export const enum AuthServices {
	currentSession = "currentSession",
	validateUsernameAndPassword = "validateUsernameAndPassword",
	validateUsername = "validateUsername",
	validateOtp = "validateOtp",
	signOut = "signOut",
	checkHasPINSet = "checkHasPINSet",
	validatePIN = "validatePIN",
	setNewPIN = "setNewPIN",
	revokePIN = "revokePIN",
}
