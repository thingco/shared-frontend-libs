{"version":3,"file":"index.js","sources":["../src/Gauge/index.tsx","../src/Graph/Context.tsx","../src/Graph/setup.ts","../src/Graph/projections.ts","../src/Graph/Annotations.tsx","../src/Graph/Axes.tsx","../src/Graph/Canvas.tsx","../src/Graph/Data.tsx","../src/Graph/GridLines.tsx","../src/Graph/Scrubber.tsx","../src/Graph/index.tsx"],"sourcesContent":["import React from \"react\";\n\nexport interface GaugeProps {\n\tvalue: number;\n\tstrokeWidth?: number;\n\tstyle?: React.CSSProperties;\n\tcolourMapper?: (value: number) => string;\n}\n\nexport function defaultColourMapper(value: number): string {\n\tswitch (true) {\n\t\tcase value === 0:\n\t\t\treturn \"grey\";\n\t\tdefault:\n\t\t\treturn \"black\";\n\t}\n}\n\n// arc length = circumference * (fraction of circle represented by the arc)\nconst arcLength: number = 2 * Math.PI * 28 * (270 / 360);\n\nfunction getIndicatorLength(value: number): number {\n\treturn arcLength * (1 - value / 100);\n}\n\nexport const Gauge = ({\n\tcolourMapper = defaultColourMapper,\n\tstrokeWidth = 4,\n\tstyle = {},\n\tvalue,\n}: GaugeProps): JSX.Element => {\n\tconst indicatorLength: number = getIndicatorLength(value);\n\tconst pad = strokeWidth - 4;\n\tconst d = `M -${20 - pad} ${20 - pad} A ${28 - pad} ${28 - pad}, 0, 1, 1, ${\n\t\t20 - pad\n\t} ${20 - pad}`;\n\n\treturn (\n\t\t<svg viewBox=\"-32 -32 64 64\" width=\"100%\" height=\"100%\" style={style}>\n\t\t\t<g fill=\"none\" strokeWidth={strokeWidth} strokeLinecap=\"round\">\n\t\t\t\t<path d={d} stroke={colourMapper(0)} />\n\t\t\t\t<path\n\t\t\t\t\td={d}\n\t\t\t\t\tstroke={colourMapper(value)}\n\t\t\t\t\tstrokeDasharray={arcLength}\n\t\t\t\t\tstrokeDashoffset={indicatorLength}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nimport { GraphData } from \"./setup\";\n\n/**\n * NOTE the context is defined apart from the Provider to prevent circular dependencies\n * occuring when main `Series.tsx` file was broken down into separate discrete files.\n */\nexport const GraphContext = React.createContext<GraphData | null>(null);\n\nexport function useGraph(): GraphData {\n\tconst graph = React.useContext(GraphContext);\n\n\tif (!GraphContext) {\n\t\tthrow new Error(\n\t\t\t\"Series values can only be accessed from within a series context provider.\"\n\t\t);\n\t} else if (!graph) {\n\t\tthrow new Error(\n\t\t\t\"Series provider value is null: cannot access anything from it, please configure it correctly.\"\n\t\t);\n\t}\n\n\treturn graph;\n}\n","export type GraphConstructor = Partial<GraphData>;\n\nexport interface GraphData {\n\t/** The array of data to be plotted on the y axis. */\n\tyAxisValues: number[];\n\t/**\n\t * The defined length of the y axis, as in a literal [unitless, but is pixels]\n\t * value for length.\n\t */\n\tyAxisSize: number;\n\t/**\n\t * The MINIMUM value to be used on the y axis. By default, this will be zero, but it is\n\t * necessary to keep it configurable to allow for data that includes negative values.\n\t */\n\tyAxisMin: number;\n\t/**\n\t * The MAXIMUM value to be used on the y axis. By default this will be the maximum of the\n\t * y axis values, but it is necessary to keep it configurable to allow for spacing at\n\t * extremities of this graph axis.\n\t */\n\tyAxisMax: number;\n\t/**\n\t * The scaling factor for the y axis. Used to project coordinates onto the rendered graph.\n\t */\n\tyAxisScale: number;\n\t/**\n\t * The step used to generate positions for annotations and grid lines on the y axis.\n\t */\n\tyAxisStep: number;\n\t/**\n\t * The array of data to be plotted on the x axis. For a horizontal series graph, this\n\t * will be just the indices of the yAxisValues data.\n\t */\n\txAxisValues: number[];\n\t/**\n\t * The defined length of the x axis, as in a literal [unitless, but is pixels]\n\t * value for length.\n\t */\n\txAxisSize: number;\n\t/**\n\t * The MINIMUM value to be used on the x axis. By default, this will be zero, but it is\n\t * necessary to keep it configurable to allow for data that includes negative values.\n\t */\n\txAxisMin: number;\n\t/**\n\t * The MAXIMUM value to be used on the x axis. By default this will be the maximum of the\n\t * x axis values, but it is necessary to keep it configurable to allow for spacing at\n\t * extremities of this graph axis.\n\t */\n\txAxisMax: number;\n\t/**\n\t * The scaling factor for the x axis. Used to project coordinates onto the rendered graph.\n\t */\n\txAxisScale: number;\n\t/**\n\t * The step used to generate positions for annotations and grid lines on the x axis.\n\t */\n\txAxisStep: number;\n}\n\nexport function createGraph({\n\txAxisMax,\n\txAxisMin = 0,\n\txAxisSize,\n\txAxisScale,\n\txAxisStep = 1,\n\txAxisValues,\n\tyAxisMax,\n\tyAxisMin = 0,\n\tyAxisSize,\n\tyAxisScale,\n\tyAxisStep = 1,\n\tyAxisValues,\n}: GraphConstructor): GraphData {\n\t/**\n\t * If neither the x and y axis values are provided, cannot create the graph:\n\t */\n\tif (!xAxisValues && !yAxisValues) {\n\t\tthrow new Error(\n\t\t\t\"ONE OR BOTH x- or y-axis value arrays MUST be provided to create the graph.\"\n\t\t);\n\t}\n\n\t/**\n\t * If only one of the x/y axis values are provided, the other axis can be assumed\n\t * to be the length of the other (_ie_ the values are plotted on a range/in series):\n\t */\n\tif (yAxisValues && !xAxisValues) {\n\t\txAxisValues = Array.from(\n\t\t\t{ length: yAxisValues.length },\n\t\t\t(_, i) => i + xAxisMin\n\t\t);\n\t} else if (xAxisValues && !yAxisValues) {\n\t\tyAxisValues = Array.from(\n\t\t\t{ length: xAxisValues.length },\n\t\t\t(_, i) => i + yAxisMin\n\t\t);\n\t}\n\t// Once both of the arrays of values are populated, can infer the max values if not present:\n\txAxisMax = xAxisMax ?? Math.max(...(xAxisValues as number[]));\n\tyAxisMax = yAxisMax ?? Math.max(...(yAxisValues as number[]));\n\n\t/**\n\t * If the x-axis size is *not* provided, then the scale *must* be\n\t * provided, otherwise the size of the axis cannot be calculated:\n\t */\n\tif ((!xAxisSize && !xAxisScale) || (xAxisSize && xAxisScale)) {\n\t\tthrow new Error(\n\t\t\t\"EITHER the x-axis size OR the x-axis scale must be provided up-front or this graph axis cannot be plotted.\"\n\t\t);\n\t} else if (xAxisSize && !xAxisScale) {\n\t\txAxisScale = calculateScale(xAxisSize, xAxisMin, xAxisMax);\n\t} else if (!xAxisSize && xAxisScale) {\n\t\txAxisSize = calculateSize(xAxisScale, xAxisMin, xAxisMax);\n\t}\n\n\t/**\n\t * If the y-axis size is *not* provided, then the scale *must* be\n\t * provided, otherwise the size of the axis cannot be calculated:\n\t */\n\tif ((!yAxisSize && !yAxisScale) || (yAxisSize && yAxisScale)) {\n\t\tthrow new Error(\n\t\t\t\"EITHER the y-axis size OR the y-axis scale must be provided up-front or this graph axis cannot be plotted.\"\n\t\t);\n\t} else if (yAxisSize && !yAxisScale) {\n\t\tyAxisScale = calculateScale(yAxisSize, yAxisMin, yAxisMax);\n\t} else if (!yAxisSize && yAxisScale) {\n\t\tyAxisSize = calculateSize(yAxisScale, yAxisMin, yAxisMax);\n\t}\n\n\treturn {\n\t\txAxisMax,\n\t\txAxisMin,\n\t\t// All branches have been covered to populate following two values,\n\t\t// they cannot be undefined at this point, compiler is being overstrict:\n\t\txAxisScale: xAxisScale as number,\n\t\txAxisSize: xAxisSize as number,\n\t\txAxisStep,\n\t\txAxisValues: xAxisValues as number[],\n\t\tyAxisMax,\n\t\tyAxisMin,\n\t\t// All branches have been covered to populate following two values,\n\t\t// they cannot be undefined at this point, compiler is being overstrict:\n\t\tyAxisScale: yAxisScale as number,\n\t\tyAxisSize: yAxisSize as number,\n\t\tyAxisStep,\n\t\tyAxisValues: yAxisValues as number[],\n\t};\n}\n\n/**\n * Examples:\n *\n * size 100 min 0 max 10 scale 10\n * size 100 min -50 max 50 scale 10\n * size 100 min -25 max 75 scale 10\n * size 100 min -100 max 0 scale 10\n *\n * @param {number} axisSize\n * @param {number} axisMin\n * @param {number} axisMax\n * @returns {number}\n */\nexport function calculateScale(\n\taxisSize: number,\n\taxisMin: number,\n\taxisMax: number\n): number {\n\treturn axisSize / (axisMax - axisMin);\n}\n\n/**\n * Examples:\n *\n * scale 10 min 0 max 10 size 100\n * scale 10 min -50 max 50 size 100\n * scale 10 min -25 max 75 size 100\n * scale 10 min -100 max 0 size 100\n *\n * @param {number} axisScale\n * @param {number} axisMin\n * @param {number} axisMax\n * @returns {number}\n */\nexport function calculateSize(\n\taxisScale: number,\n\taxisMin: number,\n\taxisMax: number\n): number {\n\treturn (axisMax - axisMin) * axisScale;\n}\n\n/**\n * Examples:\n * coord at 5, size 100, min 0, max 10, scale 10 = 50\n * coord at 5, size 100, min -5, max 5, scale 10 = 100\n * coord at 5, size 100, min -2.5, max 7.5, scale 10 = 75\n * coord at -5, size 100, min -10, max 0, scale 10 = 50\n *\n * If the axis min value is greater than zero, then floor it to zero\n * in the calculation: the graph is plotted on the SVG from a zero\n * point regardless of what the data is.\n *\n * coord at 0, size 100, min 1, max 10, scale 11.1 = 0\n *\n * REVIEW if there are only negative values, there may be an issue here, TEST.\n *\n * @param {GraphData} graphData\n * @param {number} graphData.xAxisMin\n * @param {number} graphData.xAxisScale\n * @param {number} axisCoord\n * @returns {number}\n */\nexport function projectXCoordToSVG(\n\t{ xAxisMin, xAxisScale }: GraphData,\n\taxisCoord: number\n): number {\n\treturn (axisCoord - xAxisMin) * xAxisScale;\n}\n\n/**\n * As `projectXCoordToSVG`, except that the resulting coordinate is inverted based on the y axis\n * size. This is because SVG coordinates are plotted from the top left, not the bottom left.\n * Leaving the coordinates as-is would cause the graph to be flipped vertically.\n *\n * Examples:\n * coord at 5, size 100, min 0, max 10, scale 10 = 100 - 50 = 50\n * coord at 5, size 100, min -5, max 5, scale 10 = 100 - 100 = 0\n * coord at 5, size 100, min -2.5, max 7.5, scale 10 = 100 - 75 = 25\n * coord at -5, size 100, min -10, max 0, scale 10 = 100 - 50 = 50\n *\n * @param {GraphData} graphData\n * @param {number} graphData.yAxisMin\n * @param {number} graphData.yAxisScale\n * @param {number} graphData.yAxisSize\n * @param {number} axisCoord\n * @returns {number}\n */\nexport function projectYCoordToSVG(\n\t{ yAxisMin, yAxisScale, yAxisSize }: GraphData,\n\taxisCoord: number\n): number {\n\treturn yAxisSize - (axisCoord - yAxisMin) * yAxisScale;\n}\n\n/**\n * NOTE specific, limited use.\n *\n * As `projectXCoordToSVG`, which will result in an inverted graph,\n * 0 at top, max at bottom. The only usecase for this is a graph\n * that has an axis rendered top to bottom vertically.\n *\n * @param {GraphData} graphData\n * @param {number} graphData.yAxisMin\n * @param {number} graphData.yAxisScale\n * @param {number} axisCoord\n * @returns {number}\n */\nexport function projectInvertedYCoordToSVG(\n\t{ yAxisMin, yAxisScale }: GraphData,\n\taxisCoord: number\n): number {\n\treturn (axisCoord - yAxisMin) * yAxisScale;\n}\n\n/**\n * Generate an array of x axis coordinates for stepped points along that axis. Used to place annotations.\n *\n * @param {GraphData} graphData\n * @param {number} graphData.xAxisMin\n * @param {number} graphData.xAxisMax\n * @param {number} graphData.xAxisStep\n * @returns {number[]}\n */\nexport function steppedXAxisValues({\n\txAxisMin,\n\txAxisMax,\n\txAxisStep,\n}: GraphData): number[] {\n\tconst vals = [];\n\n\t// TODO currently ignoring graphs that only have data with negative values that should be plotted\n\t// starting on a value < 0.\n\tif (xAxisMin > 0) {\n\t\tfor (let v = xAxisMin; v <= xAxisMax; v += xAxisStep) vals.push(v);\n\t\treturn vals;\n\t} else {\n\t\tvals.push(0);\n\t\tfor (let v = 0 - xAxisStep; v >= xAxisMin; v -= xAxisStep) vals.unshift(v);\n\t\tfor (let v = 0 + xAxisStep; v <= xAxisMax; v += xAxisStep) vals.push(v);\n\t\treturn vals;\n\t}\n}\n\n/**\n * Generate an array of y axis coordinates for stepped points along that axis. Used to place annotations.\n *\n * @param {GraphData} graphData\n * @param {number} graphData.yAxisMin\n * @param {number} graphData.yAxisMax\n * @param {number} graphData.yAxisStep\n * @returns {number[]}\n */\nexport function steppedYAxisValues({\n\tyAxisMin,\n\tyAxisMax,\n\tyAxisStep,\n}: GraphData): number[] {\n\tconst vals = [];\n\n\t// TODO currently ignoring graphs that only have data with negative values that should be plotted\n\t// starting on a value < 0.\n\tif (yAxisMin > 0) {\n\t\tfor (let v = yAxisMin; v <= yAxisMax; v += yAxisStep) vals.push(v);\n\t\treturn vals;\n\t} else {\n\t\tvals.push(0);\n\t\tfor (let v = 0 - yAxisStep; v >= yAxisMin; v -= yAxisStep) vals.unshift(v);\n\t\tfor (let v = 0 + yAxisStep; v <= yAxisMax; v += yAxisStep) vals.push(v);\n\t\treturn vals;\n\t}\n}\n","import {\n    GraphData,\n    projectInvertedYCoordToSVG as pyInv,\n    projectXCoordToSVG as px,\n    projectYCoordToSVG as py,\n    steppedXAxisValues,\n    steppedYAxisValues\n} from \"./setup\";\n\nexport interface LineCoordinate {\n\tx1: number;\n\tx2: number;\n\ty1: number;\n\ty2: number;\n}\nexport interface PointCoordinate {\n\tx: number;\n\ty: number;\n}\n\nexport type VerticalAlignment = \"top\" | \"bottom\";\nexport type HorizontalAlignment = \"left\" | \"right\";\n\nexport function verticalLineFullHeight(\n\tgraph: GraphData,\n\txPosition: number\n): LineCoordinate {\n\treturn {\n\t\tx1: px(graph, xPosition),\n\t\tx2: px(graph, xPosition),\n\t\ty1: 0,\n\t\ty2: graph.yAxisSize,\n\t};\n}\n\nexport function horizontalLineFullWidth(\n\tgraph: GraphData,\n\tyPosition: number\n): LineCoordinate {\n\treturn {\n\t\tx1: 0,\n\t\tx2: graph.xAxisSize,\n\t\ty1: py(graph, yPosition),\n\t\ty2: py(graph, yPosition),\n\t};\n}\n\nexport function invertedHorizontalLineFullWidth(\n\tgraph: GraphData,\n\tyPosition: number\n): LineCoordinate {\n\treturn {\n\t\tx1: 0,\n\t\tx2: graph.xAxisSize,\n\t\ty1: pyInv(graph, yPosition),\n\t\ty2: pyInv(graph, yPosition),\n\t};\n}\n\nexport function yAxis(graph: GraphData): LineCoordinate {\n\tconst xPlacement = graph.xAxisMin > 0 ? graph.xAxisMin : 0;\n\n\treturn verticalLineFullHeight(graph, xPlacement);\n}\n\nexport function yAxisAnnotations(graph: GraphData): PointCoordinate[] {\n\tconst xPlacement = graph.xAxisMin > 0 ? graph.xAxisMin : 0;\n\n\treturn steppedYAxisValues(graph).map((v) => ({\n\t\tx: px(graph, xPlacement),\n\t\ty: py(graph, v),\n\t}));\n}\n\nexport function invertedYAxisAnnotations(graph: GraphData): PointCoordinate[] {\n\tconst xPlacement = graph.xAxisMin > 0 ? graph.xAxisMin : 0;\n\n\treturn steppedYAxisValues(graph).map((v) => ({\n\t\tx: px(graph, xPlacement),\n\t\ty: pyInv(graph, v),\n\t}));\n}\n\nexport function horizontalGridLines(graph: GraphData): LineCoordinate[] {\n\treturn steppedYAxisValues(graph).map((v) =>\n\t\thorizontalLineFullWidth(graph, v)\n\t);\n}\n\nexport function invertedHorizontalGridLines(\n\tgraph: GraphData\n): LineCoordinate[] {\n\treturn steppedYAxisValues(graph).map((v) =>\n\t\tinvertedHorizontalLineFullWidth(graph, v)\n\t);\n}\n\nexport function yAxisSteps(graph: GraphData): LineCoordinate[] {\n\treturn steppedYAxisValues(graph).map((v) => ({\n\t\tx1: px(graph, 0),\n\t\tx2: px(graph, 0) - 2,\n\t\ty1: py(graph, v),\n\t\ty2: py(graph, v),\n\t}));\n}\n\nexport function invertedYAxisSteps(graph: GraphData): LineCoordinate[] {\n\treturn steppedYAxisValues(graph).map((v) => ({\n\t\tx1: px(graph, 0),\n\t\tx2: px(graph, 0) - 2,\n\t\ty1: pyInv(graph, v),\n\t\ty2: pyInv(graph, v),\n\t}));\n}\n\nexport function xAxis(graph: GraphData, position = \"bottom\"): LineCoordinate {\n\treturn horizontalLineFullWidth(\n\t\tgraph,\n\t\tposition === \"top\" ? graph.yAxisMax : 0\n\t);\n}\n\nexport function xAxisSteps(\n\tgraph: GraphData,\n\tposition: VerticalAlignment\n): LineCoordinate[] {\n\treturn steppedXAxisValues(graph).map((v) => ({\n\t\tx1: px(graph, v),\n\t\tx2: px(graph, v),\n\t\ty1: position === \"top\" ? py(graph, graph.yAxisMax) : py(graph, 0),\n\t\ty2: position === \"top\" ? py(graph, graph.yAxisMax) - 2 : py(graph, 0) + 2,\n\t}));\n}\n\nexport function xAxisAnnotations(\n\tgraph: GraphData,\n\tposition = \"bottom\"\n): PointCoordinate[] {\n\treturn steppedXAxisValues(graph).map((v) => ({\n\t\tx: px(graph, v),\n\t\ty: py(graph, position === \"top\" ? graph.yAxisMax : 0),\n\t}));\n}\n\nexport function verticalGridlines(graph: GraphData): LineCoordinate[] {\n\treturn steppedXAxisValues(graph).map((v) => verticalLineFullHeight(graph, v));\n}\n\nexport function dotPoints(graph: GraphData): PointCoordinate[] {\n\treturn graph.yAxisValues.map((v, i) => ({\n\t\tx: px(graph, graph.xAxisValues[i]),\n\t\ty: py(graph, v),\n\t}));\n}\n\nexport function linePoints(graph: GraphData): string {\n\treturn graph.yAxisValues\n\t\t.map((v, i) => `${px(graph, graph.xAxisValues[i])},${py(graph, v)}`)\n\t\t.join(\" \");\n}\n\nexport function horizontalLineBarPoints(graph: GraphData): LineCoordinate[] {\n\treturn graph.xAxisValues.map((v, i) => ({\n\t\tx1: px(graph, 0),\n\t\tx2: px(graph, v),\n\t\ty1: py(graph, graph.yAxisValues[i]),\n\t\ty2: py(graph, graph.yAxisValues[i]),\n\t}));\n}\n\nexport function invertedHorizontalLineBarPoints(\n\tgraph: GraphData\n): LineCoordinate[] {\n\treturn graph.xAxisValues.map((v, i) => ({\n\t\tx1: px(graph, 0),\n\t\tx2: px(graph, v),\n\t\ty1: pyInv(graph, graph.yAxisValues[i]),\n\t\ty2: pyInv(graph, graph.yAxisValues[i]),\n\t}));\n}\n\nexport function verticalLineBarPoints(graph: GraphData): LineCoordinate[] {\n\treturn graph.yAxisValues.map((v, i) => ({\n\t\tx1: px(graph, graph.xAxisValues[i]),\n\t\tx2: px(graph, graph.xAxisValues[i]),\n\t\ty1: py(graph, 0),\n\t\ty2: py(graph, v),\n\t}));\n}\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\nimport { VerticalAlignment, xAxisAnnotations, yAxisAnnotations } from \"./projections\";\nimport { steppedXAxisValues, steppedYAxisValues } from \"./setup\";\n\nexport interface AxisAnnotationsProps {\n\tstyle?: React.CSSProperties;\n\toffsetY?: number;\n\toffsetX?: number;\n\tannotations?: (string | number)[];\n}\n\nconst defaultAnnotationStyle: React.CSSProperties = {\n\tfontSize: 3,\n\tfontFamily: \"sans-serif\",\n\tfontWeight: \"bold\",\n\ttextAnchor: \"middle\",\n};\n\nexport const XAxisAnnotations = ({\n\tstyle = {},\n\tannotations,\n\toffsetY = 4,\n\tposition = \"bottom\",\n}: AxisAnnotationsProps & { position?: VerticalAlignment }): JSX.Element => {\n\tstyle = { ...defaultAnnotationStyle, ...style };\n\tconst graph = useGraph();\n\n\tannotations = annotations ?? steppedXAxisValues(graph);\n\n\treturn (\n\t\t<g style={style} data-componentid=\"x-axis-annotations\">\n\t\t\t{xAxisAnnotations(graph, position).map(({ x, y }, i) => (\n\t\t\t\t<text\n\t\t\t\t\tkey={`${x}${y}${i}`}\n\t\t\t\t\tx={x}\n\t\t\t\t\ty={y - offsetY}\n\t\t\t\t\tdata-componentid={`x-axis-annotation-${x}${y}${i}`}\n\t\t\t\t>\n\t\t\t\t\t{annotations && annotations[i]}\n\t\t\t\t</text>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n\nexport const YAxisAnnotations = ({\n\tstyle = {},\n\toffsetX = 2,\n\toffsetY = 0,\n\tannotations,\n}: AxisAnnotationsProps): JSX.Element => {\n\tstyle = { ...defaultAnnotationStyle, ...style };\n\tconst graph = useGraph();\n\n\tannotations = annotations ?? steppedYAxisValues(graph);\n\n\treturn (\n\t\t<g data-componentid=\"y-axis-annotations\">\n\t\t\t{yAxisAnnotations(graph).map(({ x, y }, i) => (\n\t\t\t\t<text\n\t\t\t\t\tkey={`${x}${y}${i}`}\n\t\t\t\t\tx={x + offsetX}\n\t\t\t\t\ty={y}\n\t\t\t\t\tdy={offsetY}\n\t\t\t\t\tstyle={{ ...style, textAnchor: \"end\" }}\n\t\t\t\t\tdata-componentid={`y-axis-annotation-${x}${y}${i}`}\n\t\t\t\t>\n\t\t\t\t\t{annotations && annotations[i]}\n\t\t\t\t</text>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\nimport { VerticalAlignment, xAxis, xAxisSteps, yAxis, yAxisSteps } from \"./projections\";\n\nexport interface AxisProps {\n\tstyle?: React.CSSProperties;\n\tshowSteps?: boolean;\n}\n\nconst defaultAxisStyle: React.CSSProperties = {\n\tfill: \"none\",\n\tstroke: \"black\",\n\tstrokeLinecap: \"round\",\n\tstrokeWidth: 1,\n};\n\nexport const XAxis = ({\n\tstyle = defaultAxisStyle,\n\tshowSteps = true,\n\tposition = \"bottom\",\n}: AxisProps & { position?: VerticalAlignment }): JSX.Element => {\n\tconst graph = useGraph();\n\tconst { x1, x2, y1, y2 } = xAxis(graph, position);\n\tconst axisSteps = showSteps ? xAxisSteps(graph, position) : null;\n\n\treturn (\n\t\t<g data-componentid=\"x-axis\">\n\t\t\t<line style={style} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t\t\t{axisSteps?.map(({ x1, x2, y1, y2 }, i) => (\n\t\t\t\t<line\n\t\t\t\t\tkey={`${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty1={y1}\n\t\t\t\t\ty2={y2}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n\nexport const YAxis = ({\n\tstyle = defaultAxisStyle,\n\tshowSteps = true,\n}: AxisProps): JSX.Element => {\n\tconst graph = useGraph();\n\tconst { x1, x2, y1, y2 } = yAxis(graph);\n\tconst axisSteps = showSteps ? yAxisSteps(graph) : null;\n\n\treturn (\n\t\t<g data-componentid=\"y-axis\">\n\t\t\t<line style={style} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t\t\t{axisSteps?.map(({ x1, x2, y1, y2 }, i) => (\n\t\t\t\t<line\n\t\t\t\t\tkey={`${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty1={y1}\n\t\t\t\t\ty2={y2}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\n\nexport type GraphPadding =\n\t| number\n\t| { top: number; right: number; bottom: number; left: number };\n\nexport interface CanvasProps {\n\tchildren: React.ReactNode;\n\tpadding?: GraphPadding;\n\tstyle?: React.CSSProperties;\n}\n\nexport const Canvas = ({\n\tchildren,\n\tpadding = 10,\n\tstyle = {},\n}: CanvasProps): JSX.Element => {\n\tconst graph = useGraph();\n\n\tconst viewBoxMinX =\n\t\t0 - (typeof padding === \"number\" ? padding : padding.left);\n\tconst viewBoxMinY = 0 - (typeof padding === \"number\" ? padding : padding.top);\n\tconst viewBoxWidth =\n\t\tgraph.xAxisSize +\n\t\t(typeof padding === \"number\" ? padding * 2 : padding.right + padding.left);\n\tconst viewBoxHeight =\n\t\tgraph.yAxisSize +\n\t\t(typeof padding === \"number\" ? padding * 2 : padding.top + padding.bottom);\n\n\treturn (\n\t\t<svg\n\t\t\tstyle={style}\n\t\t\tviewBox={`${viewBoxMinX} ${viewBoxMinY} ${viewBoxWidth} ${viewBoxHeight}`}\n\t\t\twidth=\"100%\"\n\t\t\theight=\"100%\"\n\t\t>\n\t\t\t{children}\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\nimport {\n    dotPoints,\n    horizontalLineBarPoints,\n    invertedHorizontalLineBarPoints,\n    linePoints,\n    verticalLineBarPoints\n} from \"./projections\";\nimport { projectXCoordToSVG as px, projectYCoordToSVG as py } from \"./setup\";\n\nexport interface DataProps {\n\tstyle?: React.CSSProperties;\n\tcoordinateOverride?: number[];\n}\n\nconst defaultDataLineStyle: React.CSSProperties = {\n\tfill: \"none\",\n\tstroke: \"black\",\n\tstrokeLinecap: \"round\",\n\tstrokeWidth: 1,\n};\n\nexport const DataLine = ({ style = {} }: DataProps): JSX.Element => {\n\tstyle = { ...defaultDataLineStyle, ...style };\n\tconst graph = useGraph();\n\n\treturn <polyline style={style} points={linePoints(graph)} />;\n};\n\nexport const VerticalLineBars = ({ style = {} }: DataProps): JSX.Element => {\n\tstyle = { ...defaultDataLineStyle, ...style };\n\tconst graph = useGraph();\n\tconst lines = verticalLineBarPoints(graph).map(({ x1, x2, y1, y2 }, i) => (\n\t\t<line key={`${x1}${x2}${y1}${y2}${i}`} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t));\n\n\treturn <g style={style}>{lines}</g>;\n};\n\nexport const HorizontalLineBars = ({ style = {} }: DataProps): JSX.Element => {\n\tstyle = { ...defaultDataLineStyle, ...style };\n\tconst graph = useGraph();\n\tconst lines = horizontalLineBarPoints(graph).map(({ x1, x2, y1, y2 }, i) => (\n\t\t<line key={`${x1}${x2}${y1}${y2}${i}`} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t));\n\n\treturn <g style={style}>{lines}</g>;\n};\n\nexport const InvertedHorizontalLineBars = ({\n\tstyle = {},\n}: DataProps): JSX.Element => {\n\tstyle = { ...defaultDataLineStyle, ...style };\n\tconst graph = useGraph();\n\tconst lines = invertedHorizontalLineBarPoints(\n\t\tgraph\n\t).map(({ x1, x2, y1, y2 }, i) => (\n\t\t<line key={`${x1}${x2}${y1}${y2}${i}`} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t));\n\n\treturn <g style={style}>{lines}</g>;\n};\n\nconst defaultDataDotsStyle: React.CSSProperties = {\n\tfill: \"black\",\n\tstroke: \"white\",\n\tstrokeWidth: 1,\n};\n\nexport const DataDots = ({\n\tstyle = {},\n\tr = 2,\n}: DataProps & { r?: number }): JSX.Element => {\n\tstyle = { ...defaultDataDotsStyle, ...style };\n\tconst graph = useGraph();\n\tconst dots = dotPoints(graph).map(({ x, y }, i) => (\n\t\t<circle key={`${x}${y}${i}`} cx={x} cy={y} r={r} />\n\t));\n\treturn <g style={style}>{dots}</g>;\n};\n\nconst defaultAreaStyle: React.CSSProperties = {\n\tstroke: \"none\",\n\tfill: \"grey\",\n\topacity: 0.2,\n};\n\nexport const AreaFillXAxis = ({\n\tstyle = {},\n\tcoordinateOverride,\n}: DataProps): JSX.Element => {\n\tstyle = { ...defaultAreaStyle, ...style };\n\tlet graph = useGraph();\n\t// If using as an overlay, there will be a new set of y-axis coordinates to plot:\n\tif (coordinateOverride) {\n\t\tgraph = { ...graph, yAxisValues: coordinateOverride };\n\t}\n\n\tconst points = `${px(graph, 0)},${py(graph, 0)} ${linePoints(graph)} ${px(\n\t\tgraph,\n\t\tgraph.xAxisMax\n\t)},${py(graph, 0)}`;\n\n\treturn <polygon style={style} points={points} />;\n};\n\nexport const AreaFillYAxis = ({\n\tstyle = {},\n\tcoordinateOverride,\n}: DataProps): JSX.Element => {\n\tstyle = { ...defaultAreaStyle, ...style };\n\tlet graph = useGraph();\n\t// If using as an overlay, there will be a new set of y-axis coordinates to plot:\n\tif (coordinateOverride) {\n\t\tgraph = { ...graph, xAxisValues: coordinateOverride };\n\t}\n\n\tconst points = `${px(graph, 0)},${py(graph, 0)} ${linePoints(graph)} ${px(\n\t\tgraph,\n\t\t0\n\t)},${py(graph, graph.yAxisMax)}`;\n\n\treturn <polygon style={style} points={points} />;\n};\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\nimport { horizontalGridLines, verticalGridlines } from \"./projections\";\n\nexport interface GridLinesProps {\n\tstyle?: React.CSSProperties;\n}\n\nconst defaultGridLinesStyle: React.CSSProperties = {\n\tstroke: \"grey\",\n\tvectorEffect: \"non-scaling-stroke\",\n\topacity: \"0.5\",\n};\n\nexport const XAxisGridLines = ({\n\tstyle = defaultGridLinesStyle,\n}: GridLinesProps): JSX.Element => {\n\tconst graph = useGraph();\n\n\treturn (\n\t\t<g data-componentid=\"x-axis-gridlines\">\n\t\t\t{verticalGridlines(graph).map(({ x1, x2, y1, y2 }, i) => (\n\t\t\t\t<line\n\t\t\t\t\tkey={`${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty1={y1}\n\t\t\t\t\ty2={y2}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tdata-componentid={`x-axis-gridline-${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n\nexport const YAxisGridLines = ({\n\tstyle = defaultGridLinesStyle,\n}: GridLinesProps): JSX.Element => {\n\tconst graph = useGraph();\n\n\treturn (\n\t\t<g data-componentid=\"y-axis-gridlines\">\n\t\t\t{horizontalGridLines(graph).map(({ x1, x2, y1, y2 }, i) => (\n\t\t\t\t<line\n\t\t\t\t\tkey={`${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty1={y1}\n\t\t\t\t\ty2={y2}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tdata-componentid={`y-axis-gridline-${x1}${x2}${y1}${y2}${i}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\nimport { invertedHorizontalLineFullWidth, verticalLineFullHeight } from \"./projections\";\nimport { projectInvertedYCoordToSVG as pyInv, projectXCoordToSVG as px } from \"./setup\";\n\nexport interface ScrubberControlProps {\n\tcurrentDataPointIndex: number;\n\tsetCurrentDataPointIndex: (n: number) => void;\n\tthumbStyle?: React.CSSProperties;\n}\n\nconst underlyingRangeInputStyle: React.CSSProperties = {\n\tappearance: \"none\",\n\tbackground: \"transparent\",\n\topacity: 0,\n\tdisplay: \"block\",\n\twidth: \"100%\",\n\theight: \"100%\",\n};\n\nconst underlyingVerticalRangeInputStyle: React.CSSProperties = {\n\t...underlyingRangeInputStyle,\n\tWebkitAppearance: \"slider-vertical\",\n\ttransform: \"rotate(180deg)\",\n};\n\nconst defaultRangeStyle: React.CSSProperties = {\n\tfill: \"none\",\n\tstroke: \"black\",\n\tstrokeWidth: 2,\n};\n\nexport const ScrubberLeftToRight = ({\n\tthumbStyle = {},\n\tcurrentDataPointIndex,\n\tsetCurrentDataPointIndex,\n}: ScrubberControlProps): JSX.Element => {\n\tthumbStyle = { ...defaultRangeStyle, ...thumbStyle };\n\tconst graph = useGraph();\n\tconst { x1, x2, y1, y2 } = verticalLineFullHeight(graph, 0);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<g\n\t\t\t\ttransform={`translate(${px(\n\t\t\t\t\tgraph,\n\t\t\t\t\tgraph.xAxisValues[currentDataPointIndex]\n\t\t\t\t)})`}\n\t\t\t>\n\t\t\t\t<line style={thumbStyle} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t\t\t</g>\n\t\t\t<foreignObject\n\t\t\t\tx={0}\n\t\t\t\ty={0}\n\t\t\t\twidth={graph.xAxisSize}\n\t\t\t\theight={graph.yAxisSize}\n\t\t\t\tdata-componentid=\"scrubbercontrol\"\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tonChange={(e) => setCurrentDataPointIndex(+e.target.value)}\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={graph.yAxisValues.length}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tstyle={underlyingRangeInputStyle}\n\t\t\t\t\tvalue={currentDataPointIndex}\n\t\t\t\t/>\n\t\t\t</foreignObject>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const ScrubberTopToBottom = ({\n\tthumbStyle = {},\n\tcurrentDataPointIndex,\n\tsetCurrentDataPointIndex,\n}: ScrubberControlProps): JSX.Element => {\n\tthumbStyle = { ...defaultRangeStyle, ...thumbStyle };\n\tconst graph = useGraph();\n\tconst { x1, x2, y1, y2 } = invertedHorizontalLineFullWidth(graph, 0);\n\n\t/** NOTE TS typings for input elements do not include the `orient` property */\n\tconst inputRef = React.useRef<HTMLInputElement>(null);\n\n\tReact.useEffect(() => {\n\t\tif (inputRef != null && inputRef.current != null) {\n\t\t\tinputRef.current.setAttribute(\"orient\", \"vertical\");\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<g\n\t\t\t\ttransform={`translate(0 ${pyInv(\n\t\t\t\t\tgraph,\n\t\t\t\t\tgraph.yAxisValues[currentDataPointIndex]\n\t\t\t\t)})`}\n\t\t\t>\n\t\t\t\t<line style={thumbStyle} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t\t\t</g>\n\t\t\t<foreignObject\n\t\t\t\tx={0}\n\t\t\t\ty={0}\n\t\t\t\twidth={graph.xAxisSize}\n\t\t\t\theight={graph.yAxisSize}\n\t\t\t\tdata-componentid=\"scrubbercontrol\"\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tonChange={(e) => setCurrentDataPointIndex(+e.target.value)}\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={graph.yAxisValues.length}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tstyle={underlyingVerticalRangeInputStyle}\n\t\t\t\t\tvalue={currentDataPointIndex}\n\t\t\t\t/>\n\t\t\t</foreignObject>\n\t\t</React.Fragment>\n\t);\n};\n","import React from \"react\";\n\nimport { XAxisAnnotations, YAxisAnnotations } from \"./Annotations\";\nimport { XAxis, YAxis } from \"./Axes\";\nimport { Canvas } from \"./Canvas\";\nimport { GraphContext } from \"./Context\";\nimport {\n    AreaFillXAxis,\n    AreaFillYAxis,\n    DataDots,\n    DataLine,\n    HorizontalLineBars,\n    InvertedHorizontalLineBars,\n    VerticalLineBars\n} from \"./Data\";\nimport { XAxisGridLines, YAxisGridLines } from \"./GridLines\";\nimport { ScrubberLeftToRight, ScrubberTopToBottom } from \"./Scrubber\";\nimport { createGraph, GraphConstructor } from \"./setup\";\n\nexport type GraphProps = GraphConstructor & {\n\tchildren: React.ReactNode;\n};\n\nexport const Graph = ({\n\tchildren,\n\txAxisSize,\n\txAxisScale,\n\txAxisMax,\n\txAxisMin,\n\txAxisStep,\n\txAxisValues,\n\tyAxisSize,\n\tyAxisScale,\n\tyAxisMax,\n\tyAxisMin,\n\tyAxisStep,\n\tyAxisValues,\n}: GraphProps): JSX.Element => {\n\tconst graph = createGraph({\n\t\txAxisSize,\n\t\txAxisScale,\n\t\txAxisMax,\n\t\txAxisMin,\n\t\txAxisStep,\n\t\txAxisValues,\n\t\tyAxisSize,\n\t\tyAxisScale,\n\t\tyAxisMax,\n\t\tyAxisMin,\n\t\tyAxisStep,\n\t\tyAxisValues,\n\t});\n\n\treturn (\n\t\t<GraphContext.Provider value={graph}>{children}</GraphContext.Provider>\n\t);\n};\n\nGraph.Canvas = Canvas;\nGraph.XAxisAnnotations = XAxisAnnotations;\nGraph.YAxisAnnotations = YAxisAnnotations;\nGraph.DataLine = DataLine;\nGraph.DataDots = DataDots;\nGraph.VerticalLineBars = VerticalLineBars;\nGraph.HorizontalLineBars = HorizontalLineBars;\nGraph.InvertedHorizontalLineBars = InvertedHorizontalLineBars;\nGraph.AreaFillXAxis = AreaFillXAxis;\nGraph.AreaFillYAxis = AreaFillYAxis;\nGraph.XAxis = XAxis;\nGraph.XAxisGridLines = XAxisGridLines;\nGraph.YAxis = YAxis;\nGraph.YAxisGridLines = YAxisGridLines;\nGraph.ScrubberLeftToRight = ScrubberLeftToRight;\nGraph.ScrubberTopToBottom = ScrubberTopToBottom;\n"],"names":["px","py","pyInv"],"mappings":"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"}