{"version":3,"file":"index.js","sources":["../src/Gauge/index.tsx","../src/Graph/Context.tsx","../src/Graph/setup.ts","../src/Graph/projections.ts","../src/Graph/Annotations.tsx","../src/Graph/Axes.tsx","../src/Graph/Data.tsx","../src/Graph/GridLines.tsx","../src/Graph/index.tsx"],"sourcesContent":["import React from \"react\";\n\nexport interface GaugeProps {\n\tvalue: number;\n\tstrokeWidth?: number;\n\tstyle?: React.CSSProperties;\n\tcolourMapper?: (value: number) => string;\n}\n\nexport function defaultColourMapper(value: number): string {\n\tswitch (true) {\n\t\tcase value === 0:\n\t\t\treturn \"grey\";\n\t\tdefault:\n\t\t\treturn \"black\";\n\t}\n}\n\n// arc length = circumference * (fraction of circle represented by the arc)\nconst arcLength: number = 2 * Math.PI * 28 * (270 / 360);\n\nfunction getIndicatorLength(value: number): number {\n\treturn arcLength * (1 - value / 100);\n}\n\nexport const Gauge = ({\n\tcolourMapper = defaultColourMapper,\n\tstrokeWidth = 4,\n\tstyle = {},\n\tvalue,\n}: GaugeProps): JSX.Element => {\n\tconst indicatorLength: number = getIndicatorLength(value);\n\tconst pad = strokeWidth - 4;\n\tconst d = `M -${20 - pad} ${20 - pad} A ${28 - pad} ${28 - pad}, 0, 1, 1, ${\n\t\t20 - pad\n\t} ${20 - pad}`;\n\n\treturn (\n\t\t<svg viewBox=\"-32 -32 64 64\" width=\"100%\" height=\"100%\" style={style}>\n\t\t\t<g fill=\"none\" strokeWidth={strokeWidth} strokeLinecap=\"round\">\n\t\t\t\t<path d={d} stroke={colourMapper(0)} />\n\t\t\t\t<path\n\t\t\t\t\td={d}\n\t\t\t\t\tstroke={colourMapper(value)}\n\t\t\t\t\tstrokeDasharray={arcLength}\n\t\t\t\t\tstrokeDashoffset={indicatorLength}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t</svg>\n\t);\n};\n","import React from \"react\";\n\nimport { GraphData } from \"./setup\";\n\n/**\n * NOTE the context is defined apart from the Provider to prevent circular dependencies\n * occuring when main `Series.tsx` file was broken down into separate discrete files.\n */\nexport const GraphContext = React.createContext<GraphData | null>(null);\n\nexport function useGraph(): GraphData {\n\tconst graph = React.useContext(GraphContext);\n\n\tif (!GraphContext) {\n\t\tthrow new Error(\n\t\t\t\"Series values can only be accessed from within a series context provider.\"\n\t\t);\n\t} else if (!graph) {\n\t\tthrow new Error(\n\t\t\t\"Series provider value is null: cannot access anything from it, please configure it correctly.\"\n\t\t);\n\t}\n\n\treturn graph;\n}\n","export type GraphConstructor = Partial<GraphData>;\n\nexport interface GraphData {\n\t/** The array of data to be plotted on the y axis. */\n\tyAxisValues: number[];\n\t/**\n\t * The defined length of the y axis, as in a literal [unitless, but is pixels]\n\t * value for length.\n\t */\n\tyAxisSize: number;\n\t/**\n\t * The MINIMUM value to be used on the y axis. By default, this will be zero, but it is\n\t * necessary to keep it configurable to allow for data that includes negative values.\n\t */\n\tyAxisMin: number;\n\t/**\n\t * The MAXIMUM value to be used on the y axis. By default this will be the maximum of the\n\t * y axis values, but it is necessary to keep it configurable to allow for spacing at\n\t * extremities of this graph axis.\n\t */\n\tyAxisMax: number;\n\t/**\n\t * The scaling factor for the y axis. Used to project coordinates onto the rendered graph.\n\t */\n\tyAxisScale: number;\n\t/**\n\t * The step used to generate positions for annotations and grid lines on the y axis.\n\t */\n\tyAxisStep: number;\n\t/**\n\t * The array of data to be plotted on the x axis. For a horizontal series graph, this\n\t * will be just the indices of the yAxisValues data.\n\t */\n\txAxisValues: number[];\n\t/**\n\t * The defined length of the x axis, as in a literal [unitless, but is pixels]\n\t * value for length.\n\t */\n\txAxisSize: number;\n\t/**\n\t * The MINIMUM value to be used on the x axis. By default, this will be zero, but it is\n\t * necessary to keep it configurable to allow for data that includes negative values.\n\t */\n\txAxisMin: number;\n\t/**\n\t * The MAXIMUM value to be used on the x axis. By default this will be the maximum of the\n\t * x axis values, but it is necessary to keep it configurable to allow for spacing at\n\t * extremities of this graph axis.\n\t */\n\txAxisMax: number;\n\t/**\n\t * The scaling factor for the x axis. Used to project coordinates onto the rendered graph.\n\t */\n\txAxisScale: number;\n\t/**\n\t * The step used to generate positions for annotations and grid lines on the x axis.\n\t */\n\txAxisStep: number;\n}\n\nexport function createGraph({\n\txAxisMax,\n\txAxisMin = 0,\n\txAxisSize,\n\txAxisStep = 1,\n\txAxisValues,\n\tyAxisMax,\n\tyAxisMin = 0,\n\tyAxisSize,\n\tyAxisStep = 1,\n\tyAxisValues,\n}: GraphConstructor): GraphData {\n\tif (!(xAxisSize && yAxisSize)) {\n\t\tthrow new Error(\n\t\t\t\"BOTH the x- and y-axis size MUST be provided to create the graph.\"\n\t\t);\n\t}\n\tif (!(xAxisValues && yAxisValues)) {\n\t\tthrow new Error(\n\t\t\t\"ONE OR BOTH x- or y-axis value arrays MUST be provided to create the graph.\"\n\t\t);\n\t}\n\tif (!xAxisValues) {\n\t\txAxisValues = Array.from(\n\t\t\t{ length: yAxisValues.length },\n\t\t\t(_, i) => i + xAxisMin\n\t\t);\n\t}\n\tif (!yAxisValues) {\n\t\tyAxisValues = Array.from(\n\t\t\t{ length: xAxisValues.length },\n\t\t\t(_, i) => i + yAxisMin\n\t\t);\n\t}\n\txAxisMax = xAxisMax ?? Math.max(...xAxisValues);\n\tyAxisMax = yAxisMax ?? Math.max(...yAxisValues);\n\n\tconst xAxisScale = calculateScale(xAxisSize, xAxisMin, xAxisMax);\n\tconst yAxisScale = calculateScale(yAxisSize, yAxisMin, yAxisMax);\n\n\treturn {\n\t\txAxisMax,\n\t\txAxisMin,\n\t\txAxisScale,\n\t\txAxisSize,\n\t\txAxisStep,\n\t\txAxisValues,\n\t\tyAxisMax,\n\t\tyAxisMin,\n\t\tyAxisScale,\n\t\tyAxisSize,\n\t\tyAxisStep,\n\t\tyAxisValues,\n\t};\n}\n\n/**\n * Examples:\n *\n * size 100 min 0 max 10 scale 10\n * size 100 min -50 max 50 scale 10\n * size 100 min -25 max 75 scale 10\n * size 100 min -100 max 0 scale 10\n *\n * @param {number} axisSize\n * @param {number} axisMin\n * @param {number} axisMax\n * @returns {number}\n */\nexport function calculateScale(\n\taxisSize: number,\n\taxisMin: number,\n\taxisMax: number\n): number {\n\treturn axisSize / (axisMax - axisMin);\n}\n\n/**\n * Examples:\n * coord at 5, size 100, min 0, max 10, scale 10 = 50\n * coord at 5, size 100, min -5, max 5, scale 10 = 100\n * coord at 5, size 100, min -2.5, max 7.5, scale 10 = 75\n * coord at -5, size 100, min -10, max 0, scale 10 = 50\n *\n * If the axis min value is greater than zero, then floor it to zero\n * in the calculation: the graph is plotted on the SVG from a zero\n * point regardless of what the data is.\n *\n * coord at 0, size 100, min 1, max 10, scale 11.1 = 0\n *\n * REVIEW if there are only negative values, there may be an issue here, TEST.\n *\n * @param {GraphData} graphData\n * @param {number} graphData.xAxisMin\n * @param {number} graphData.xAxisScale\n * @param {number} axisCoord\n * @returns {number}\n */\nexport function projectXCoordToSVG(\n\t{ xAxisMin, xAxisScale }: GraphData,\n\taxisCoord: number\n): number {\n\treturn (axisCoord - xAxisMin) * xAxisScale;\n}\n\n/**\n * As `projectXCoordToSVG`, except that the resulting coordinate is inverted based on the y axis\n * size. This is because SVG coordinates are plotted from the top left, not the bottom left.\n * Leaving the coordinates as-is would cause the graph to be flipped vertically.\n *\n * Examples:\n * coord at 5, size 100, min 0, max 10, scale 10 = 100 - 50 = 50\n * coord at 5, size 100, min -5, max 5, scale 10 = 100 - 100 = 0\n * coord at 5, size 100, min -2.5, max 7.5, scale 10 = 100 - 75 = 25\n * coord at -5, size 100, min -10, max 0, scale 10 = 100 - 50 = 50\n *\n * @param {GraphData} graphData\n * @param {number} graphData.yAxisMin\n * @param {number} graphData.yAxisScale\n * @param {number} graphData.yAxisSize\n * @param {number} axisCoord\n * @returns {number}\n */\nexport function projectYCoordToSVG(\n\t{ yAxisMin, yAxisScale, yAxisSize }: GraphData,\n\taxisCoord: number\n): number {\n\treturn yAxisSize - (axisCoord - yAxisMin) * yAxisScale;\n}\n\n/**\n * Generate an array of x axis coordinates for stepped points along that axis. Used to place annotations.\n *\n * @param {GraphData} graphData\n * @param {number} graphData.xAxisMin\n * @param {number} graphData.xAxisMax\n * @param {number} graphData.xAxisStep\n * @returns {number[]}\n */\nexport function steppedXAxisValues({\n\txAxisMin,\n\txAxisMax,\n\txAxisStep,\n}: GraphData): number[] {\n\tconst vals = [];\n\n\t// TODO currently ignoring graphs that only have data with negative values that should be plotted\n\t// starting on a value < 0.\n\tif (xAxisMin > 0) {\n\t\tfor (let v = xAxisMin; v <= xAxisMax; v += xAxisStep) vals.push(v);\n\t\treturn vals;\n\t} else {\n\t\tvals.push(0);\n\t\tfor (let v = 0 - xAxisStep; v >= xAxisMin; v -= xAxisStep) vals.unshift(v);\n\t\tfor (let v = 0 + xAxisStep; v <= xAxisMax; v += xAxisStep) vals.push(v);\n\t\treturn vals;\n\t}\n}\n\n/**\n * Generate an array of y axis coordinates for stepped points along that axis. Used to place annotations.\n *\n * @param {GraphData} graphData\n * @param {number} graphData.yAxisMin\n * @param {number} graphData.yAxisMax\n * @param {number} graphData.yAxisStep\n * @returns {number[]}\n */\nexport function steppedYAxisValues({\n\tyAxisMin,\n\tyAxisMax,\n\tyAxisStep,\n}: GraphData): number[] {\n\tconst vals = [];\n\n\t// TODO currently ignoring graphs that only have data with negative values that should be plotted\n\t// starting on a value < 0.\n\tif (yAxisMin > 0) {\n\t\tfor (let v = yAxisMin; v <= yAxisMax; v += yAxisStep) vals.push(v);\n\t\treturn vals;\n\t} else {\n\t\tvals.push(0);\n\t\tfor (let v = 0 - yAxisStep; v >= yAxisMin; v -= yAxisStep) vals.unshift(v);\n\t\tfor (let v = 0 + yAxisStep; v <= yAxisMax; v += yAxisStep) vals.push(v);\n\t\treturn vals;\n\t}\n}\n","import {\n  GraphData,\n  projectXCoordToSVG as px,\n  projectYCoordToSVG as py,\n  steppedXAxisValues,\n  steppedYAxisValues\n} from \"./setup\";\n\nexport function dataPoints(graph: GraphData): { x: number; y: number }[] {\n\treturn graph.yAxisValues.map((v, i) => ({\n\t\tx: px(graph, graph.xAxisValues[i]),\n\t\ty: py(graph, v),\n\t}));\n}\n\nexport function dataLineBars(\n\tgraph: GraphData\n): { x1: number; x2: number; y1: number; y2: number }[] {\n\treturn graph.yAxisValues.map((v, i) => ({\n\t\tx1: px(graph, graph.xAxisValues[i]),\n\t\tx2: px(graph, graph.xAxisValues[i]),\n\t\ty1: py(graph, 0),\n\t\ty2: py(graph, v),\n\t}));\n}\n\nexport function yAxis(\n\tgraph: GraphData\n): { x1: number; x2: number; y1: number; y2: number } {\n\tconst xPlacement = graph.xAxisMin > 0 ? graph.xAxisMin : 0;\n\n\treturn {\n\t\tx1: px(graph, xPlacement),\n\t\tx2: px(graph, xPlacement),\n\t\ty1: 0,\n\t\ty2: graph.yAxisSize,\n\t};\n}\n\nexport function yAxisAnnotations(graph: GraphData): { x: number; y: number }[] {\n\tconst xPlacement = graph.xAxisMin > 0 ? graph.xAxisMin : 0;\n\n\treturn steppedYAxisValues(graph).map((v) => ({\n\t\tx: px(graph, xPlacement),\n\t\ty: py(graph, v),\n\t}));\n}\n\nexport function yAxisGridLines(\n\tgraph: GraphData\n): { x1: number; x2: number; y1: number; y2: number }[] {\n\treturn steppedYAxisValues(graph).map((v) => ({\n\t\tx1: 0,\n\t\tx2: graph.xAxisSize,\n\t\ty1: py(graph, v),\n\t\ty2: py(graph, v),\n\t}));\n}\n\nexport function yAxisSteps(\n\tgraph: GraphData\n): { x1: number; x2: number; y1: number; y2: number }[] {\n\treturn steppedYAxisValues(graph).map((v) => ({\n\t\tx1: px(graph, 0),\n\t\tx2: px(graph, 0) - 2,\n\t\ty1: py(graph, v),\n\t\ty2: py(graph, v),\n\t}));\n}\n\nexport function xAxis(\n\tgraph: GraphData\n): { x1: number; x2: number; y1: number; y2: number } {\n\treturn { x1: 0, x2: graph.xAxisSize, y1: py(graph, 0), y2: py(graph, 0) };\n}\n\nexport function xAxisAnnotations(graph: GraphData): { x: number; y: number }[] {\n\treturn steppedXAxisValues(graph).map((v) => ({\n\t\tx: px(graph, v),\n\t\ty: py(graph, 0),\n\t}));\n}\n\nexport function xAxisGridlines(\n\tgraph: GraphData\n): { x1: number; x2: number; y1: number; y2: number }[] {\n\treturn steppedXAxisValues(graph).map((v) => ({\n\t\tx1: px(graph, v),\n\t\tx2: px(graph, v),\n\t\ty1: 0,\n\t\ty2: graph.yAxisSize,\n\t}));\n}\n\nexport function xAxisSteps(\n\tgraph: GraphData\n): { x1: number; x2: number; y1: number; y2: number }[] {\n\treturn steppedXAxisValues(graph).map((v) => ({\n\t\tx1: px(graph, v),\n\t\tx2: px(graph, v),\n\t\ty1: py(graph, 0),\n\t\ty2: py(graph, 0) + 2,\n\t}));\n}\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\nimport { xAxisAnnotations, yAxisAnnotations } from \"./projections\";\nimport { steppedXAxisValues, steppedYAxisValues } from \"./setup\";\n\nexport interface AxisAnnotationsProps {\n\tstyle?: React.CSSProperties;\n\toffsetY?: number;\n\toffsetX?: number;\n\tannotations?: (string | number)[];\n}\n\nconst defaultAnnotationStyle: React.CSSProperties = {\n\tfontSize: 3,\n\tfontFamily: \"sans-serif\",\n\tfontWeight: \"bold\",\n\ttextAnchor: \"middle\",\n};\n\nexport const XAxisAnnotations = ({\n\tstyle = {},\n\tannotations,\n\toffsetY = 4,\n}: AxisAnnotationsProps): JSX.Element => {\n\tstyle = { ...defaultAnnotationStyle, ...style };\n\tconst graph = useGraph();\n\n\tannotations = annotations ?? steppedXAxisValues(graph);\n\n\treturn (\n\t\t<g style={style} data-componentid=\"x-axis-annotations\">\n\t\t\t{xAxisAnnotations(graph).map(({ x, y }, i) => (\n\t\t\t\t<text\n\t\t\t\t\tkey={`${x}${y}${i}`}\n\t\t\t\t\tx={x}\n\t\t\t\t\ty={y - offsetY}\n\t\t\t\t\tdata-componentid={`x-axis-annotation-${x}${y}${i}`}\n\t\t\t\t>\n\t\t\t\t\t{annotations && annotations[i]}\n\t\t\t\t</text>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n\nexport const YAxisAnnotations = ({\n\tstyle = {},\n\toffsetX = 2,\n\toffsetY = 0,\n\tannotations,\n}: AxisAnnotationsProps): JSX.Element => {\n\tstyle = { ...defaultAnnotationStyle, ...style };\n\tconst graph = useGraph();\n\n\tannotations = annotations ?? steppedYAxisValues(graph);\n\n\treturn (\n\t\t<g data-componentid=\"y-axis-annotations\">\n\t\t\t{yAxisAnnotations(graph).map(({ x, y }, i) => (\n\t\t\t\t<text\n\t\t\t\t\tkey={`${x}${y}${i}`}\n\t\t\t\t\tx={x + offsetX}\n\t\t\t\t\ty={y}\n\t\t\t\t\tdy={offsetY}\n\t\t\t\t\tstyle={{ ...style, textAnchor: \"end\" }}\n\t\t\t\t\tdata-componentid={`y-axis-annotation-${x}${y}${i}`}\n\t\t\t\t>\n\t\t\t\t\t{annotations && annotations[i]}\n\t\t\t\t</text>\n\t\t\t))}\n\t\t</g>\n\t);\n};\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\nimport { xAxis, xAxisSteps, yAxis, yAxisSteps } from \"./projections\";\n\nexport interface AxisProps {\n  style?: React.CSSProperties;\n  showSteps?: boolean;\n}\n\nconst defaultAxisStyle: React.CSSProperties = {\n  fill: \"none\",\n  stroke: \"black\",\n  strokeLinecap: \"round\",\n  strokeWidth: 1,\n};\n\nexport const XAxis = ({\n  style = defaultAxisStyle,\n  showSteps = true,\n}: AxisProps): JSX.Element => {\n  const graph = useGraph();\n  const { x1, x2, y1, y2 } = xAxis(graph);\n  const axisSteps = showSteps ? xAxisSteps(graph) : null;\n\n  return (\n    <g data-componentid=\"x-axis\">\n      <line style={style} x1={x1} x2={x2} y1={y1} y2={y2} />\n      {axisSteps?.map(({ x1, x2, y1, y2 }, i) => (\n        <line\n          key={`${x1}${x2}${y1}${y2}${i}`}\n          style={style}\n          x1={x1}\n          x2={x2}\n          y1={y1}\n          y2={y2}\n        />\n      ))}\n    </g>\n  );\n};\n\nexport const YAxis = ({\n  style = defaultAxisStyle,\n  showSteps = true,\n}: AxisProps): JSX.Element => {\n  const graph = useGraph();\n  const { x1, x2, y1, y2 } = yAxis(graph);\n  const axisSteps = showSteps ? yAxisSteps(graph) : null;\n\n  return (\n    <g data-componentid=\"y-axis\">\n      <line style={style} x1={x1} x2={x2} y1={y1} y2={y2} />\n      {axisSteps?.map(({ x1, x2, y1, y2 }, i) => (\n        <line\n          key={`${x1}${x2}${y1}${y2}${i}`}\n          style={style}\n          x1={x1}\n          x2={x2}\n          y1={y1}\n          y2={y2}\n        />\n      ))}\n    </g>\n  );\n};\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\nimport { GraphData, projectXCoordToSVG as px, projectYCoordToSVG as py } from \"./setup\";\n\nexport interface DataLineProps {\n\tstyle?: React.CSSProperties;\n}\n\nconst defaultDataLineStyle: React.CSSProperties = {\n\tfill: \"none\",\n\tstroke: \"black\",\n\tstrokeLinecap: \"round\",\n\tstrokeWidth: 1,\n};\n\nexport function projectedDataLinePoints(graph: GraphData): string {\n\treturn graph.yAxisValues\n\t\t.map((v, i) => `${px(graph, graph.xAxisValues[i])},${py(graph, v)}`)\n\t\t.join(\" \");\n}\n\nexport const DataLine = ({ style = {} }: DataLineProps): JSX.Element => {\n\tstyle = { ...defaultDataLineStyle, ...style };\n\tconst graph = useGraph();\n\n\treturn <polyline style={style} points={projectedDataLinePoints(graph)} />;\n};\n\nexport function projectedHorizontalLineBarPoints(\n\tgraph: GraphData\n): { x1: number; x2: number; y1: number; y2: number }[] {\n\treturn graph.yAxisValues.map((v, i) => ({\n\t\tx1: px(graph, graph.xAxisValues[i]),\n\t\tx2: px(graph, graph.xAxisValues[i]),\n\t\ty1: py(graph, 0),\n\t\ty2: py(graph, v),\n\t}));\n}\n\nexport const DataHorizontalLineBar = ({\n\tstyle = {},\n}: DataLineProps): JSX.Element => {\n\tstyle = { ...defaultDataLineStyle, ...style };\n\tconst graph = useGraph();\n\tconst lines = projectedHorizontalLineBarPoints(\n\t\tgraph\n\t).map(({ x1, x2, y1, y2 }, i) => (\n\t\t<line key={`${x1}${x2}${y1}${y2}${i}`} x1={x1} x2={x2} y1={y1} y2={y2} />\n\t));\n\n\treturn <g style={style}>{lines}</g>;\n};\n\nexport interface DataDotsProps {\n\tstyle?: React.CSSProperties;\n\tr?: number;\n}\n\nconst defaultDataDotsStyle: React.CSSProperties = {\n\tfill: \"black\",\n\tstroke: \"white\",\n\tstrokeWidth: 1,\n};\n\nexport function projectedDotsPoints(\n\tgraph: GraphData\n): { x: number; y: number }[] {\n\treturn graph.yAxisValues.map((v, i) => ({\n\t\tx: px(graph, graph.xAxisValues[i]),\n\t\ty: py(graph, v),\n\t}));\n}\n\nexport const DataDots = ({ style = {}, r = 2 }: DataDotsProps): JSX.Element => {\n\tstyle = { ...defaultDataDotsStyle, ...style };\n\tconst graph = useGraph();\n\tconst dots = projectedDotsPoints(graph).map(({ x, y }, i) => (\n\t\t<circle key={`${x}${y}${i}`} cx={x} cy={y} r={r} />\n\t));\n\treturn <g style={style}>{dots}</g>;\n};\n","import React from \"react\";\n\nimport { useGraph } from \"./Context\";\nimport { xAxisGridlines, yAxisGridLines } from \"./projections\";\n\nexport interface GridLinesProps {\n  style?: React.CSSProperties;\n}\n\nconst defaultGridLinesStyle: React.CSSProperties = {\n  stroke: \"grey\",\n  vectorEffect: \"non-scaling-stroke\",\n  opacity: \"0.5\",\n};\n\nexport const XAxisGridLines = ({\n  style = defaultGridLinesStyle,\n}: GridLinesProps): JSX.Element => {\n  const graph = useGraph();\n\n  return (\n    <g data-componentid=\"x-axis-gridlines\">\n      {xAxisGridlines(graph).map(({ x1, x2, y1, y2 }, i) => (\n        <line\n          key={`${x1}${x2}${y1}${y2}${i}`}\n          x1={x1}\n          x2={x2}\n          y1={y1}\n          y2={y2}\n          style={style}\n          data-componentid={`x-axis-gridline-${x1}${x2}${y1}${y2}${i}`}\n        />\n      ))}\n    </g>\n  );\n};\n\nexport const YAxisGridLines = ({\n  style = defaultGridLinesStyle,\n}: GridLinesProps): JSX.Element => {\n  const graph = useGraph();\n\n  return (\n    <g data-componentid=\"y-axis-gridlines\">\n      {yAxisGridLines(graph).map(({ x1, x2, y1, y2 }, i) => (\n        <line\n          key={`${x1}${x2}${y1}${y2}${i}`}\n          x1={x1}\n          x2={x2}\n          y1={y1}\n          y2={y2}\n          style={style}\n          data-componentid={`y-axis-gridline-${x1}${x2}${y1}${y2}${i}`}\n        />\n      ))}\n    </g>\n  );\n};\n","import React from \"react\";\n\nimport { XAxisAnnotations, YAxisAnnotations } from \"./Annotations\";\nimport { XAxis, YAxis } from \"./Axes\";\nimport { GraphContext } from \"./Context\";\nimport { DataDots, DataHorizontalLineBar, DataLine } from \"./Data\";\nimport { XAxisGridLines, YAxisGridLines } from \"./GridLines\";\nimport { createGraph, GraphConstructor } from \"./setup\";\n\nexport type GraphPadding =\n\t| number\n\t| { top: number; right: number; bottom: number; left: number };\n\nexport type GraphProps = GraphConstructor & {\n\tchildren: React.ReactNode;\n\tpadding?: GraphPadding;\n\tstyle?: React.CSSProperties;\n};\n\nexport const Graph = ({\n\txAxisSize,\n\txAxisMax,\n\txAxisMin,\n\txAxisStep,\n\txAxisValues,\n\tyAxisSize,\n\tyAxisMax,\n\tyAxisMin,\n\tyAxisStep,\n\tyAxisValues,\n\tchildren,\n\tpadding = 10,\n\tstyle,\n}: GraphProps): JSX.Element => {\n\tconst graph = createGraph({\n\t\txAxisSize,\n\t\txAxisMax,\n\t\txAxisMin,\n\t\txAxisStep,\n\t\txAxisValues,\n\t\tyAxisSize,\n\t\tyAxisMax,\n\t\tyAxisMin,\n\t\tyAxisStep,\n\t\tyAxisValues,\n\t});\n\n\tconst viewBoxMinX =\n\t\t0 - (typeof padding === \"number\" ? padding : padding.left);\n\tconst viewBoxMinY = 0 - (typeof padding === \"number\" ? padding : padding.top);\n\tconst viewBoxWidth =\n\t\tgraph.xAxisSize +\n\t\t(typeof padding === \"number\" ? padding * 2 : padding.right + padding.left);\n\tconst viewBoxHeight =\n\t\tgraph.yAxisSize +\n\t\t(typeof padding === \"number\" ? padding * 2 : padding.top + padding.bottom);\n\n\treturn (\n\t\t<GraphContext.Provider value={graph}>\n\t\t\t<svg\n\t\t\t\tstyle={style}\n\t\t\t\tviewBox={`${viewBoxMinX} ${viewBoxMinY} ${viewBoxWidth} ${viewBoxHeight}`}\n\t\t\t\twidth=\"100%\"\n\t\t\t\theight=\"100%\"\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</svg>\n\t\t</GraphContext.Provider>\n\t);\n};\n\nGraph.XAxisAnnotations = XAxisAnnotations;\nGraph.YAxisAnnotations = YAxisAnnotations;\nGraph.DataLine = DataLine;\nGraph.DataDots = DataDots;\nGraph.DataHorizontalLineBar = DataHorizontalLineBar;\nGraph.XAxis = XAxis;\nGraph.XAxisGridLines = XAxisGridLines;\nGraph.YAxis = YAxis;\nGraph.YAxisGridLines = YAxisGridLines;\n"],"names":["px","py"],"mappings":"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"}