{"code":"import { steppedXAxisValues, steppedYAxisValues } from \"../create-graph\";\r\n/**\r\n * Examples:\r\n * coord at 5, size 100, min 0, max 10, scale 10 = 50\r\n * coord at 5, size 100, min -5, max 5, scale 10 = 100\r\n * coord at 5, size 100, min -2.5, max 7.5, scale 10 = 75\r\n * coord at -5, size 100, min -10, max 0, scale 10 = 50\r\n *\r\n * If the axis min value is greater than zero, then floor it to zero\r\n * in the calculation: the graph is plotted on the SVG from a zero\r\n * point regardless of what the data is.\r\n *\r\n * coord at 0, size 100, min 1, max 10, scale 11.1 = 0\r\n *\r\n * REVIEW if there are only negative values, there may be an issue here, TEST.\r\n *\r\n * @param {GraphData} graphData\r\n * @param {number} graphData.xAxisMin\r\n * @param {number} graphData.xAxisScale\r\n * @param {number} axisCoord\r\n * @returns {number}\r\n */\r\nexport function projectXCoordToSVG({ xAxisMin, xAxisScale }, axisCoord) {\r\n    return (axisCoord - xAxisMin) * xAxisScale;\r\n}\r\nexport const px = projectXCoordToSVG;\r\n/**\r\n * As `projectXCoordToSVG`, except that the resulting coordinate is inverted based on the y axis\r\n * size. This is because SVG coordinates are plotted from the top left, not the bottom left.\r\n * Leaving the coordinates as-is would cause the graph to be flipped vertically.\r\n *\r\n * Examples:\r\n * coord at 5, size 100, min 0, max 10, scale 10 = 100 - 50 = 50\r\n * coord at 5, size 100, min -5, max 5, scale 10 = 100 - 100 = 0\r\n * coord at 5, size 100, min -2.5, max 7.5, scale 10 = 100 - 75 = 25\r\n * coord at -5, size 100, min -10, max 0, scale 10 = 100 - 50 = 50\r\n *\r\n * @param {GraphData} graphData\r\n * @param {number} graphData.yAxisMin\r\n * @param {number} graphData.yAxisScale\r\n * @param {number} graphData.yAxisSize\r\n * @param {number} axisCoord\r\n * @returns {number}\r\n */\r\nexport function projectYCoordToSVG({ yAxisMin, yAxisScale, yAxisSize }, axisCoord) {\r\n    return yAxisSize - (axisCoord - yAxisMin) * yAxisScale;\r\n}\r\nexport const py = projectYCoordToSVG;\r\nexport function verticalLineFullHeight(graph, xPosition) {\r\n    return {\r\n        x1: px(graph, xPosition),\r\n        x2: px(graph, xPosition),\r\n        y1: 0,\r\n        y2: graph.yAxisSize,\r\n    };\r\n}\r\nexport function horizontalLineFullWidth(graph, yPosition) {\r\n    return {\r\n        x1: 0,\r\n        x2: graph.xAxisSize,\r\n        y1: py(graph, yPosition),\r\n        y2: py(graph, yPosition),\r\n    };\r\n}\r\nexport function yAxis(graph) {\r\n    const xPlacement = graph.xAxisMin > 0 ? graph.xAxisMin : 0;\r\n    return verticalLineFullHeight(graph, xPlacement);\r\n}\r\nexport function yAxisAnnotations(graph) {\r\n    const xPlacement = graph.xAxisMin > 0 ? graph.xAxisMin : 0;\r\n    return steppedYAxisValues(graph).map((v) => ({\r\n        x: px(graph, xPlacement),\r\n        y: py(graph, v),\r\n    }));\r\n}\r\nexport function horizontalGridLines(graph) {\r\n    return steppedYAxisValues(graph).map((v) => horizontalLineFullWidth(graph, v));\r\n}\r\nexport function yAxisSteps(graph) {\r\n    return steppedYAxisValues(graph).map((v) => ({\r\n        x1: px(graph, 0),\r\n        x2: px(graph, 0) - 2,\r\n        y1: py(graph, v),\r\n        y2: py(graph, v),\r\n    }));\r\n}\r\nexport function xAxis(graph, position = \"bottom\") {\r\n    return horizontalLineFullWidth(graph, position === \"top\" ? graph.yAxisMax : 0);\r\n}\r\nexport function xAxisSteps(graph, position) {\r\n    return steppedXAxisValues(graph).map((v) => ({\r\n        x1: px(graph, v),\r\n        x2: px(graph, v),\r\n        y1: position === \"top\" ? py(graph, graph.yAxisMax) : py(graph, 0),\r\n        y2: position === \"top\" ? py(graph, graph.yAxisMax) - 2 : py(graph, 0) + 2,\r\n    }));\r\n}\r\nexport function xAxisAnnotations(graph, position = \"bottom\") {\r\n    return steppedXAxisValues(graph).map((v) => ({\r\n        x: px(graph, v),\r\n        y: py(graph, position === \"top\" ? graph.yAxisMax : 0),\r\n    }));\r\n}\r\nexport function verticalGridlines(graph) {\r\n    return steppedXAxisValues(graph).map((v) => verticalLineFullHeight(graph, v));\r\n}\r\nexport function dotPoints(graph) {\r\n    return graph.yAxisValues.map((v, i) => ({\r\n        x: px(graph, graph.xAxisValues[i]),\r\n        y: py(graph, v),\r\n    }));\r\n}\r\nexport function linePoints(graph) {\r\n    return graph.yAxisValues\r\n        .map((v, i) => `${px(graph, graph.xAxisValues[i])},${py(graph, v)}`)\r\n        .join(\" \");\r\n}\r\nexport function horizontalLineBarPoints(graph) {\r\n    return graph.xAxisValues.map((v, i) => ({\r\n        x1: px(graph, 0),\r\n        x2: px(graph, v),\r\n        y1: py(graph, graph.yAxisValues[i]),\r\n        y2: py(graph, graph.yAxisValues[i]),\r\n    }));\r\n}\r\nexport function verticalLineBarPoints(graph) {\r\n    return graph.yAxisValues.map((v, i) => ({\r\n        x1: px(graph, graph.xAxisValues[i]),\r\n        x2: px(graph, graph.xAxisValues[i]),\r\n        y1: py(graph, 0),\r\n        y2: py(graph, v),\r\n    }));\r\n}\r\n//# sourceMappingURL=svg.js.map","references":["/Users/daniel.couper/Work/shared-frontend-libs/packages/graphviz/src/create-graph.ts"],"map":"{\"version\":3,\"file\":\"svg.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/projections/svg.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"/Users/daniel.couper/Work/shared-frontend-libs/packages/graphviz/lib/projections/svg.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"svg.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../src/projections/svg.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAA0C,MAAM,iBAAiB,CAAC;AAEpF,MAAM,WAAW,cAAc;IAC9B,EAAE,EAAE,MAAM,CAAC;IACX,EAAE,EAAE,MAAM,CAAC;IACX,EAAE,EAAE,MAAM,CAAC;IACX,EAAE,EAAE,MAAM,CAAC;CACX;AACD,MAAM,WAAW,eAAe;IAC/B,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;CACV;AAED,oBAAY,iBAAiB,GAAG,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC;AAC1D,oBAAY,mBAAmB,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;AAE5D;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,wBAAgB,kBAAkB,CACjC,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,SAAS,EACnC,SAAS,EAAE,MAAM,GACf,MAAM,CAER;AAED,eAAO,MAAM,EAAE,2BAAqB,CAAC;AAErC;;;;;;;;;;;;;;;;;GAiBG;AACH,wBAAgB,kBAAkB,CACjC,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,SAAS,EAC9C,SAAS,EAAE,MAAM,GACf,MAAM,CAER;AAED,eAAO,MAAM,EAAE,2BAAqB,CAAC;AAErC,wBAAgB,sBAAsB,CACrC,KAAK,EAAE,SAAS,EAChB,SAAS,EAAE,MAAM,GACf,cAAc,CAOhB;AAED,wBAAgB,uBAAuB,CACtC,KAAK,EAAE,SAAS,EAChB,SAAS,EAAE,MAAM,GACf,cAAc,CAOhB;AAED,wBAAgB,KAAK,CAAC,KAAK,EAAE,SAAS,GAAG,cAAc,CAItD;AAED,wBAAgB,gBAAgB,CAAC,KAAK,EAAE,SAAS,GAAG,eAAe,EAAE,CAOpE;AAED,wBAAgB,mBAAmB,CAAC,KAAK,EAAE,SAAS,GAAG,cAAc,EAAE,CAItE;AAED,wBAAgB,UAAU,CAAC,KAAK,EAAE,SAAS,GAAG,cAAc,EAAE,CAO7D;AAED,wBAAgB,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,SAAW,GAAG,cAAc,CAK3E;AAED,wBAAgB,UAAU,CACzB,KAAK,EAAE,SAAS,EAChB,QAAQ,EAAE,iBAAiB,GACzB,cAAc,EAAE,CAOlB;AAED,wBAAgB,gBAAgB,CAC/B,KAAK,EAAE,SAAS,EAChB,QAAQ,SAAW,GACjB,eAAe,EAAE,CAKnB;AAED,wBAAgB,iBAAiB,CAAC,KAAK,EAAE,SAAS,GAAG,cAAc,EAAE,CAEpE;AAED,wBAAgB,SAAS,CAAC,KAAK,EAAE,SAAS,GAAG,eAAe,EAAE,CAK7D;AAED,wBAAgB,UAAU,CAAC,KAAK,EAAE,SAAS,GAAG,MAAM,CAInD;AAED,wBAAgB,uBAAuB,CAAC,KAAK,EAAE,SAAS,GAAG,cAAc,EAAE,CAO1E;AAED,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,SAAS,GAAG,cAAc,EAAE,CAOxE\"}"},"dts":{"name":"/Users/daniel.couper/Work/shared-frontend-libs/packages/graphviz/lib/projections/svg.d.ts","writeByteOrderMark":false,"text":"import { GraphData } from \"../create-graph\";\r\nexport interface LineCoordinate {\r\n    x1: number;\r\n    x2: number;\r\n    y1: number;\r\n    y2: number;\r\n}\r\nexport interface PointCoordinate {\r\n    x: number;\r\n    y: number;\r\n}\r\nexport declare type VerticalAlignment = \"top\" | \"zero\" | \"bottom\";\r\nexport declare type HorizontalAlignment = \"left\" | \"zero\" | \"right\";\r\n/**\r\n * Examples:\r\n * coord at 5, size 100, min 0, max 10, scale 10 = 50\r\n * coord at 5, size 100, min -5, max 5, scale 10 = 100\r\n * coord at 5, size 100, min -2.5, max 7.5, scale 10 = 75\r\n * coord at -5, size 100, min -10, max 0, scale 10 = 50\r\n *\r\n * If the axis min value is greater than zero, then floor it to zero\r\n * in the calculation: the graph is plotted on the SVG from a zero\r\n * point regardless of what the data is.\r\n *\r\n * coord at 0, size 100, min 1, max 10, scale 11.1 = 0\r\n *\r\n * REVIEW if there are only negative values, there may be an issue here, TEST.\r\n *\r\n * @param {GraphData} graphData\r\n * @param {number} graphData.xAxisMin\r\n * @param {number} graphData.xAxisScale\r\n * @param {number} axisCoord\r\n * @returns {number}\r\n */\r\nexport declare function projectXCoordToSVG({ xAxisMin, xAxisScale }: GraphData, axisCoord: number): number;\r\nexport declare const px: typeof projectXCoordToSVG;\r\n/**\r\n * As `projectXCoordToSVG`, except that the resulting coordinate is inverted based on the y axis\r\n * size. This is because SVG coordinates are plotted from the top left, not the bottom left.\r\n * Leaving the coordinates as-is would cause the graph to be flipped vertically.\r\n *\r\n * Examples:\r\n * coord at 5, size 100, min 0, max 10, scale 10 = 100 - 50 = 50\r\n * coord at 5, size 100, min -5, max 5, scale 10 = 100 - 100 = 0\r\n * coord at 5, size 100, min -2.5, max 7.5, scale 10 = 100 - 75 = 25\r\n * coord at -5, size 100, min -10, max 0, scale 10 = 100 - 50 = 50\r\n *\r\n * @param {GraphData} graphData\r\n * @param {number} graphData.yAxisMin\r\n * @param {number} graphData.yAxisScale\r\n * @param {number} graphData.yAxisSize\r\n * @param {number} axisCoord\r\n * @returns {number}\r\n */\r\nexport declare function projectYCoordToSVG({ yAxisMin, yAxisScale, yAxisSize }: GraphData, axisCoord: number): number;\r\nexport declare const py: typeof projectYCoordToSVG;\r\nexport declare function verticalLineFullHeight(graph: GraphData, xPosition: number): LineCoordinate;\r\nexport declare function horizontalLineFullWidth(graph: GraphData, yPosition: number): LineCoordinate;\r\nexport declare function yAxis(graph: GraphData): LineCoordinate;\r\nexport declare function yAxisAnnotations(graph: GraphData): PointCoordinate[];\r\nexport declare function horizontalGridLines(graph: GraphData): LineCoordinate[];\r\nexport declare function yAxisSteps(graph: GraphData): LineCoordinate[];\r\nexport declare function xAxis(graph: GraphData, position?: string): LineCoordinate;\r\nexport declare function xAxisSteps(graph: GraphData, position: VerticalAlignment): LineCoordinate[];\r\nexport declare function xAxisAnnotations(graph: GraphData, position?: string): PointCoordinate[];\r\nexport declare function verticalGridlines(graph: GraphData): LineCoordinate[];\r\nexport declare function dotPoints(graph: GraphData): PointCoordinate[];\r\nexport declare function linePoints(graph: GraphData): string;\r\nexport declare function horizontalLineBarPoints(graph: GraphData): LineCoordinate[];\r\nexport declare function verticalLineBarPoints(graph: GraphData): LineCoordinate[];\r\n//# sourceMappingURL=svg.d.ts.map"}}
